<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">
  <title>沙沙的博客</title>
  
  <subtitle>你的努力，终将有所回报</subtitle>
  <link href="/atom.xml" rel="self"/>
  
  <link href="http://yoursite.com/"/>
  <updated>2018-09-12T12:16:49.666Z</updated>
  <id>http://yoursite.com/</id>
  
  <author>
    <name>wusha</name>
    
  </author>
  
  <generator uri="http://hexo.io/">Hexo</generator>
  
  <entry>
    <title>搭建docker私库</title>
    <link href="http://yoursite.com/2018/09/12/%E6%90%AD%E5%BB%BAdocker%E7%A7%81%E5%BA%93/"/>
    <id>http://yoursite.com/2018/09/12/搭建docker私库/</id>
    <published>2018-09-12T12:07:00.000Z</published>
    <updated>2018-09-12T12:16:49.666Z</updated>
    
    <content type="html"><![CDATA[<p>前面关于nexus的操作参考前面nexus的文章</p><p>1.新建私有私库</p><p><img src="/2018/09/12/搭建docker私库/20180319145543619.png" alt="这里写图片描述"></p><p>2.新建角色和用户</p><p><img src="/2018/09/12/搭建docker私库/20180319145559442.png" alt="这里写图片描述"></p><p><img src="/2018/09/12/搭建docker私库/20180319145636227.png" alt="这里写图片描述"></p><p><img src="/2018/09/12/搭建docker私库/20180319145646202.png" alt="这里写图片描述"></p><p><img src="/2018/09/12/搭建docker私库/20180319145658144.png" alt="这里写图片描述"><br>3.docker上传与下载</p><p>使用docker登录私库：密码<strong><em>**</em></strong></p><p>docker login youstudio.cn:7182<br>给镜像打标记，设置为私库将要提交的路径：</p><p><img src="/2018/09/12/搭建docker私库/201803191458498.png" alt="这里写图片描述"></p><p>docker tag nginx:1.13.5 youstudio.cn:7182/xcfr/test/nginx:1.0.0</p><p><img src="/2018/09/12/搭建docker私库/20180319145918894.png" alt="这里写图片描述"></p><p>往私库上放置一个镜像：</p><p>docker push youstudio.cn:7182/xcfr/test/nginx:1.0.0</p><p><img src="/2018/09/12/搭建docker私库/20180319150023517.png" alt="这里写图片描述"></p><p>从私库上拉取刚刚上传的镜像一个镜像：</p><p>docker pull youstudio.cn:7182/xcfr/test/nginx:1.0.0</p><p><img src="/2018/09/12/搭建docker私库/20180319150122474.png" alt="这里写图片描述"><br>通过浏览器查看结果：</p><p>点击打开链接</p>]]></content>
    
    <summary type="html">
    
      
      
        &lt;p&gt;前面关于nexus的操作参考前面nexus的文章&lt;/p&gt;
&lt;p&gt;1.新建私有私库&lt;/p&gt;
&lt;p&gt;&lt;img src=&quot;/2018/09/12/搭建docker私库/20180319145543619.png&quot; alt=&quot;这里写图片描述&quot;&gt;&lt;/p&gt;
&lt;p&gt;2.新建角色和用户&lt;/
      
    
    </summary>
    
    
      <category term="docker私库" scheme="http://yoursite.com/tags/docker%E7%A7%81%E5%BA%93/"/>
    
  </entry>
  
  <entry>
    <title>基于highcharts+easui+java生成饼图</title>
    <link href="http://yoursite.com/2018/09/12/%E5%9F%BA%E4%BA%8Ehighcharts-easui-java%E7%94%9F%E6%88%90%E9%A5%BC%E5%9B%BE/"/>
    <id>http://yoursite.com/2018/09/12/基于highcharts-easui-java生成饼图/</id>
    <published>2018-09-12T08:03:00.000Z</published>
    <updated>2018-09-12T12:05:56.004Z</updated>
    
    <content type="html"><![CDATA[<p>前言：第一次接触饼图，刚开始没有思路，后面在网上找了一下对比了一下，发现用highcharts插件去生成图表特别简单，用起来还是非常简单的，只需要后台返回相应的数据前台用json接收一下，就可以完美的实现了。</p><p>一、先来个实体展示，让大家看看效果<br><img src="/2018/09/12/基于highcharts-easui-java生成饼图/1143999-20171106170702075-58795943.png" alt=""></p><p>（效果还是美美的）</p><p>二、要实现这个效果首先要去highcharts官网去下载你自己需要的图表<br>简单的介绍下Highcharts，Highcharts是一个非常流行，界面美观的纯Javascript图表库。它主要包括两个部分：Highcharts和Highstock。Highcharts可以为您的网站或Web应用程序提供直观，互动式的图表。目前支持线，样条，面积，areaspline，柱形图，条形图，饼图和散点图类型。Highstock可以为您方便地建立股票或一般的时间轴图表。它包括先进的导航选项，预设的日期范围，日期选择器，滚动和平移等等。（下面是highcharts官网地址和demo）</p><p>HIghChartS官网：<a href="http://www.highcharts.com/" target="_blank" rel="noopener">http://www.highcharts.com/</a></p><p>HighCharts Demo:<a href="http://www.highcharts.com/demo/" target="_blank" rel="noopener">http://www.highcharts.com/demo/</a></p><p><img src="/2018/09/12/基于highcharts-easui-java生成饼图/1143999-20171106171128778-1396954218.png" alt=""></p><p>2.1引入相应的js文件才能实现页面效果<br>由于我在Web开发框架中，主要采用了MVC+EasyUI的方式，因包含的文件如下所示。(每个图表需要引得文件官网的demo里面都有）</p><figure class="highlight http"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br></pre></td><td class="code"><pre><code class="hljs undefined"><br><br><span class="erb"><span class="xml"><span class="hljs-tag">&lt;<span class="hljs-name">script</span> <span class="hljs-attr">type</span>=<span class="hljs-string">"text/javascript"</span> <span class="hljs-attr">src</span>=<span class="hljs-string">"&lt;%=</span></span></span><span class="ruby">basePath</span><span class="xml"><span class="hljs-tag"><span class="hljs-string">%&gt;/view/report/highcharts.js"</span>&gt;</span><span class="undefined"></span><span class="hljs-tag">&lt;/<span class="hljs-name">script</span>&gt;</span><br><span class="hljs-tag">&lt;<span class="hljs-name">script</span> <span class="hljs-attr">type</span>=<span class="hljs-string">"text/javascript"</span> <span class="hljs-attr">src</span>=<span class="hljs-string">"&lt;%=</span></span></span><span class="ruby">basePath</span><span class="xml"><span class="hljs-tag"><span class="hljs-string">%&gt;/js/grid.js"</span>&gt;</span><span class="undefined"></span><span class="hljs-tag">&lt;/<span class="hljs-name">script</span>&gt;</span><br><span class="hljs-tag">&lt;<span class="hljs-name">script</span> <span class="hljs-attr">type</span>=<span class="hljs-string">"text/javascript"</span> <span class="hljs-attr">src</span>=<span class="hljs-string">"&lt;%=</span></span></span><span class="ruby">basePath</span><span class="xml"><span class="hljs-tag"><span class="hljs-string">%&gt;/view/report/exporting.js"</span>&gt;</span><span class="undefined"></span><span class="hljs-tag">&lt;/<span class="hljs-name">script</span>&gt;</span><br> <span class="hljs-tag">&lt;<span class="hljs-name">script</span> <span class="hljs-attr">type</span>=<span class="hljs-string">"text/javascript"</span> <span class="hljs-attr">src</span>=<span class="hljs-string">"/view/report/jquery.min.js"</span>&gt;</span><span class="undefined"></span><span class="hljs-tag">&lt;/<span class="hljs-name">script</span>&gt;</span><br><br><br><br><br><br><br><br><span class="hljs-tag">&lt;<span class="hljs-name">script</span> <span class="hljs-attr">type</span>=<span class="hljs-string">"text/javascript"</span> <span class="hljs-attr">src</span>=<span class="hljs-string">"&lt;%=</span></span></span><span class="ruby">basePath</span><span class="xml"><span class="hljs-tag"><span class="hljs-string">%&gt;/view/report/jquery.min.js"</span>&gt;</span><span class="undefined"></span><span class="hljs-tag">&lt;/<span class="hljs-name">script</span>&gt;</span><br>@*图表JS文件应用*@<br><span class="hljs-tag">&lt;<span class="hljs-name">script</span> <span class="hljs-attr">type</span>=<span class="hljs-string">"text/javascript"</span> <span class="hljs-attr">src</span>=<span class="hljs-string">"&lt;%=</span></span></span><span class="ruby">basePath</span><span class="xml"><span class="hljs-tag"><span class="hljs-string">%&gt;/view/report/highcharts.js"</span>&gt;</span><span class="undefined"></span><span class="hljs-tag">&lt;/<span class="hljs-name">script</span>&gt;</span><br><span class="hljs-tag">&lt;<span class="hljs-name">script</span> <span class="hljs-attr">type</span>=<span class="hljs-string">"text/javascript"</span> <span class="hljs-attr">src</span>=<span class="hljs-string">"&lt;%=</span></span></span><span class="ruby">basePath</span><span class="xml"><span class="hljs-tag"><span class="hljs-string">%&gt;/js/grid.js"</span>&gt;</span><span class="undefined"></span><span class="hljs-tag">&lt;/<span class="hljs-name">script</span>&gt;</span><br><span class="hljs-tag">&lt;<span class="hljs-name">script</span> <span class="hljs-attr">type</span>=<span class="hljs-string">"text/javascript"</span> <span class="hljs-attr">src</span>=<span class="hljs-string">"&lt;%=</span></span></span><span class="ruby">basePath</span><span class="xml"><span class="hljs-tag"><span class="hljs-string">%&gt;/view/report/exporting.js"</span>&gt;</span><span class="undefined"></span><span class="hljs-tag">&lt;/<span class="hljs-name">script</span>&gt;</span></span></span><br></code></pre></td></tr></table></figure><p> 三、图表的js代码<br>首先是官网下载下来的图表代码</p><figure class="highlight yaml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br></pre></td><td class="code"><pre><code class="hljs undefined"><span class="hljs-string">$(function</span> <span class="hljs-string">()</span> <span class="hljs-string">&#123;</span><br>    <span class="hljs-string">$('#container').highcharts(&#123;</span><br><span class="hljs-attr">        chart:</span> <span class="hljs-string">&#123;</span><br><span class="hljs-attr">            plotBackgroundColor:</span> <span class="hljs-literal">null</span><span class="hljs-string">,</span><br><span class="hljs-attr">            plotBorderWidth:</span> <span class="hljs-literal">null</span><span class="hljs-string">,</span><br><span class="hljs-attr">            plotShadow:</span> <span class="hljs-literal">false</span><br>        <span class="hljs-string">&#125;,</span><br><span class="hljs-attr">        title:</span> <span class="hljs-string">&#123;</span><br><span class="hljs-attr">            text:</span> <span class="hljs-string">'2014 某网站上各个浏览器的访问量占比'</span><br>        <span class="hljs-string">&#125;,</span><br><span class="hljs-attr">        tooltip:</span> <span class="hljs-string">&#123;</span><br><span class="hljs-attr">            headerFormat:</span> <span class="hljs-string">'&#123;series.name&#125;&lt;br&gt;'</span><span class="hljs-string">,</span><br><span class="hljs-attr">            pointFormat:</span> <span class="hljs-string">'&#123;point.name&#125;: &lt;b&gt;&#123;point.percentage:.1f&#125;%&lt;/b&gt;'</span><br>        <span class="hljs-string">&#125;,</span><br><span class="hljs-attr">        plotOptions:</span> <span class="hljs-string">&#123;</span><br><span class="hljs-attr">            pie:</span> <span class="hljs-string">&#123;</span><br><span class="hljs-attr">                allowPointSelect:</span> <span class="hljs-literal">true</span><span class="hljs-string">,</span><br><span class="hljs-attr">                cursor:</span> <span class="hljs-string">'pointer'</span><span class="hljs-string">,</span><br><span class="hljs-attr">                dataLabels:</span> <span class="hljs-string">&#123;</span><br><span class="hljs-attr">                    enabled:</span> <span class="hljs-literal">false</span><br>                <span class="hljs-string">&#125;,</span><br><span class="hljs-attr">                showInLegend:</span> <span class="hljs-literal">true</span><br>            <span class="hljs-string">&#125;</span><br>        <span class="hljs-string">&#125;,</span><br><span class="hljs-attr">        series:</span> <span class="hljs-string">[&#123;</span><br><span class="hljs-attr">            type:</span> <span class="hljs-string">'pie'</span><span class="hljs-string">,</span><br><span class="hljs-attr">            name:</span> <span class="hljs-string">'浏览器访问量占比'</span><span class="hljs-string">,</span><br><span class="hljs-attr">            data:</span> <span class="hljs-string">[</span><br>                <span class="hljs-string">['Firefox',</span>   <span class="hljs-number">45.0</span><span class="hljs-string">],</span><br>                <span class="hljs-string">['IE',</span>       <span class="hljs-number">26.8</span><span class="hljs-string">],</span><br>                <span class="hljs-string">&#123;</span><br><span class="hljs-attr">                    name:</span> <span class="hljs-string">'Chrome'</span><span class="hljs-string">,</span><br><span class="hljs-attr">                    y:</span> <span class="hljs-number">12.8</span><span class="hljs-string">,</span><br><span class="hljs-attr">                    sliced:</span> <span class="hljs-literal">true</span><span class="hljs-string">,</span><br><span class="hljs-attr">                    selected:</span> <span class="hljs-literal">true</span><br>                <span class="hljs-string">&#125;,</span><br>                <span class="hljs-string">['Safari',</span>    <span class="hljs-number">8.5</span><span class="hljs-string">],</span><br>                <span class="hljs-string">['Opera',</span>     <span class="hljs-number">6.2</span><span class="hljs-string">],</span><br>                <span class="hljs-string">['其他',</span>   <span class="hljs-number">0.7</span><span class="hljs-string">]</span><br>            <span class="hljs-string">]</span><br>        <span class="hljs-string">&#125;]</span><br>    <span class="hljs-string">&#125;);</span><br><span class="hljs-string">&#125;);</span><br></code></pre></td></tr></table></figure><p>改动后的样式，只需要把data换成动态的数组用json来接收</p><figure class="highlight yaml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br></pre></td><td class="code"><pre><code class="hljs undefined"><span class="hljs-string">var</span> <span class="hljs-string">chart2=</span>  <span class="hljs-string">Highcharts.chart('container1',</span> <span class="hljs-string">&#123;</span><br><span class="hljs-attr">            chart:</span> <span class="hljs-string">&#123;</span><br><span class="hljs-attr">                margin:</span> <span class="hljs-string">[0,</span> <span class="hljs-number">0</span><span class="hljs-string">,</span> <span class="hljs-number">0</span><span class="hljs-string">,</span> <span class="hljs-number">0</span><span class="hljs-string">],</span><br><span class="hljs-attr">                width:</span><span class="hljs-number">300</span><span class="hljs-string">,</span><br><span class="hljs-attr">                padding:</span><span class="hljs-string">[0,</span> <span class="hljs-number">0</span><span class="hljs-string">,</span> <span class="hljs-number">0</span><span class="hljs-string">,</span> <span class="hljs-number">0</span><span class="hljs-string">],</span><br><span class="hljs-attr">                plotBackgroundColor:</span> <span class="hljs-literal">null</span><span class="hljs-string">,</span><br><span class="hljs-attr">                plotBorderWidth:</span> <span class="hljs-literal">null</span><span class="hljs-string">,</span><br><span class="hljs-attr">                plotShadow:</span> <span class="hljs-literal">false</span><br>            <span class="hljs-string">&#125;,</span><br><span class="hljs-attr">            title:</span> <span class="hljs-string">&#123;</span><br><span class="hljs-attr">                text:</span> <span class="hljs-string">'各航站异常行李数量'</span><br>            <span class="hljs-string">&#125;,</span><br>           <span class="hljs-string">/*</span> <span class="hljs-attr">tooltip:</span> <span class="hljs-string">&#123;</span><br><span class="hljs-attr">                headerFormat:</span> <span class="hljs-string">'&#123;series.name&#125;&lt;br&gt;'</span><span class="hljs-string">,</span><br><span class="hljs-attr">                pointFormat:</span> <span class="hljs-string">'&#123;point.name&#125;: &lt;b&gt;&#123;point.percentage:.1f&#125;%&lt;/b&gt;'</span><br>            <span class="hljs-string">&#125;,*/</span><br><span class="hljs-attr">            plotOptions:</span> <span class="hljs-string">&#123;</span><br><span class="hljs-attr">                pie:</span> <span class="hljs-string">&#123;</span><br><span class="hljs-attr">                    allowPointSelect:</span> <span class="hljs-literal">true</span><span class="hljs-string">,</span><br><span class="hljs-attr">                    cursor:</span> <span class="hljs-string">'pointer'</span><span class="hljs-string">,</span><br><span class="hljs-attr">                    dataLabels:</span> <span class="hljs-string">&#123;</span><br><span class="hljs-attr">                        enabled:</span> <span class="hljs-literal">true</span><span class="hljs-string">,</span><br><span class="hljs-attr">                        format:</span> <span class="hljs-string">'&lt;b&gt;&#123;point.name&#125;&lt;/b&gt;'</span><span class="hljs-string">,</span><br><span class="hljs-attr">                        style:</span> <span class="hljs-string">&#123;</span><br><span class="hljs-attr">                            color:</span> <span class="hljs-string">(Highcharts.theme</span> <span class="hljs-string">&amp;&amp;</span> <span class="hljs-string">Highcharts.theme.contrastTextColor)</span> <span class="hljs-string">||</span> <span class="hljs-string">'black'</span><br>                        <span class="hljs-string">&#125;</span><br>                    <span class="hljs-string">&#125;</span><br>                <span class="hljs-string">&#125;</span><br>            <span class="hljs-string">&#125;,</span><br><span class="hljs-attr">            series:</span> <span class="hljs-string">[&#123;</span><br><span class="hljs-attr">                type:</span> <span class="hljs-string">'pie'</span><span class="hljs-string">,</span><br><span class="hljs-attr">                name:</span> <span class="hljs-string">'异常行李量'</span><span class="hljs-string">,</span><br><span class="hljs-attr">                data:</span> <span class="hljs-string">[</span> <span class="hljs-string">]</span><br>            <span class="hljs-string">&#125;]</span><br>        <span class="hljs-string">&#125;);</span><br></code></pre></td></tr></table></figure><p> 我的ajax请求</p><p> function getPieJson(){<br>          var data1 = [];<br>          $.ajax({<br>                type : “POST”, // 提交方式<br>                url :servicefulPath + ‘/irregularBagReportTotal/pieChart’,<br>                success : function(result){<br>                   var json = result.data;<br>                   for ( var key in json) {<br>                    //通过遍历对象属性的方法，遍历键值对，获得key，然后通过 对象[key]获得对应的值<br>                       if (json.hasOwnProperty(key)) {<br>                        data1.push([key, json[key]]);<br>                    }<br>                   }<br>                   chart2.series[0].setData(data1);<br>             }<br>          });<br>      }</p><p>四，后台代码格式<br>（注明：每个的后台框架和条件都不一样，最重要的是返回一个map数据到前台就可以了）</p><figure class="highlight processing"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br></pre></td><td class="code"><pre><code class="hljs undefined"><br><span class="hljs-comment">//饼图</span><br> <span class="hljs-keyword">public</span> Map&lt;<span class="hljs-keyword">String</span>, <span class="hljs-keyword">Object</span>&gt; pieChart()&#123;<br>     Map&lt;<span class="hljs-keyword">String</span>, <span class="hljs-keyword">Object</span>&gt; <span class="hljs-built_in">map</span> = <span class="hljs-keyword">new</span> <span class="hljs-keyword">HashMap</span>&lt;<span class="hljs-keyword">String</span>, <span class="hljs-keyword">Object</span>&gt;();<br>     StringBuffer sql = <span class="hljs-keyword">new</span> StringBuffer(<span class="hljs-string">"SELECT SUM (E .LOSE) AS lose,SUM (E .MISSHIPMENT) AS miss,"</span>);<br>     sql.<span class="hljs-built_in">append</span>(<span class="hljs-string">" SUM (E .LEAKAGE_LUCK) AS leak,SUM (E . LESS) AS LESS,SUM (E .DAMAGED) AS damaged"</span>);<br>     sql.<span class="hljs-built_in">append</span>(<span class="hljs-string">" FROM E_ABNOM_BAGGA_TRAN E"</span>);<br>     Query query = entityManager.createNativeQuery(sql.toString());<span class="hljs-comment">//执行sql语句</span><br>     <span class="hljs-keyword">Object</span>[] o =  (<span class="hljs-keyword">Object</span>[])query.getResultList().<span class="hljs-built_in">get</span>(<span class="hljs-number">0</span>);<br>     IrregularBagReport count = <span class="hljs-keyword">new</span> IrregularBagReport();<br>     <span class="hljs-comment">//丢失</span><br>     <span class="hljs-keyword">if</span> (o[<span class="hljs-number">0</span>] == <span class="hljs-keyword">null</span>) &#123;<br>         count.setLost(BigDecimal.ZERO);<br>     &#125; <span class="hljs-keyword">else</span> &#123;<br>         count.setLost((BigDecimal) o[<span class="hljs-number">0</span>]);<br>     &#125;<br>     <span class="hljs-comment">//错运</span><br>     <span class="hljs-keyword">if</span> (o[<span class="hljs-number">1</span>] == <span class="hljs-keyword">null</span>) &#123;<br>         count.setMisshipMent(BigDecimal.ZERO);<br>     &#125; <span class="hljs-keyword">else</span> &#123;<br>         count.setMisshipMent((BigDecimal) o[<span class="hljs-number">1</span>]);<br>     &#125;<br>     <span class="hljs-comment">//漏运</span><br>     <span class="hljs-keyword">if</span> (o[<span class="hljs-number">2</span>] == <span class="hljs-keyword">null</span>) &#123;<br>         count.setLeakageLuck(BigDecimal.ZERO);<br>     &#125; <span class="hljs-keyword">else</span> &#123;<br>         count.setLeakageLuck((BigDecimal) o[<span class="hljs-number">2</span>]);<br>     &#125;<br>     <span class="hljs-comment">//少收</span><br>     <span class="hljs-keyword">if</span> (o[<span class="hljs-number">3</span>] == <span class="hljs-keyword">null</span>) &#123;<br>         count.setLess(BigDecimal.ZERO);<br>     &#125; <span class="hljs-keyword">else</span>&#123;<br>         count.setLess( (BigDecimal) o[<span class="hljs-number">3</span>]);<br>     &#125;<br>     <span class="hljs-comment">//破损</span><br>     <span class="hljs-keyword">if</span> (o[<span class="hljs-number">4</span>] == <span class="hljs-keyword">null</span>) &#123;<br>         count.setDamaged(BigDecimal.ZERO);<br>     &#125; <span class="hljs-keyword">else</span> &#123;<br>         count.setDamaged((BigDecimal) o[<span class="hljs-number">4</span>]);<br>     &#125;<br>     <span class="hljs-built_in">map</span>.put(<span class="hljs-string">"丢失"</span>, count.getLost());<br>     <span class="hljs-built_in">map</span>.put(<span class="hljs-string">"错运"</span>, count.getMisshipMent());<br>     <span class="hljs-built_in">map</span>.put(<span class="hljs-string">"漏运"</span>,count.getLeakageLuck());<br>     <span class="hljs-built_in">map</span>.put(<span class="hljs-string">"少收"</span>, count.getLess());<br>     <span class="hljs-built_in">map</span>.put(<span class="hljs-string">"破损"</span>, count.getDamaged());<br>     <span class="hljs-keyword">return</span> <span class="hljs-built_in">map</span>;<br> &#125;<br></code></pre></td></tr></table></figure><p> 综上所述，按照上面的步骤就能生成饼图了，欢迎大佬们评论留言。</p>]]></content>
    
    <summary type="html">
    
      
      
        &lt;p&gt;前言：第一次接触饼图，刚开始没有思路，后面在网上找了一下对比了一下，发现用highcharts插件去生成图表特别简单，用起来还是非常简单的，只需要后台返回相应的数据前台用json接收一下，就可以完美的实现了。&lt;/p&gt;
&lt;p&gt;一、先来个实体展示，让大家看看效果&lt;br&gt;&lt;img
      
    
    </summary>
    
    
      <category term="java" scheme="http://yoursite.com/tags/java/"/>
    
      <category term="easui" scheme="http://yoursite.com/tags/easui/"/>
    
  </entry>
  
  <entry>
    <title>react+dva+antd的骚操作</title>
    <link href="http://yoursite.com/2018/09/12/react+dva+antd%E7%9A%84%E9%AA%9A%E6%93%8D%E4%BD%9C/"/>
    <id>http://yoursite.com/2018/09/12/react+dva+antd的骚操作/</id>
    <published>2018-09-12T07:56:00.000Z</published>
    <updated>2018-09-12T11:29:07.664Z</updated>
    
    <content type="html"><![CDATA[<p><img src="/2018/09/12/react+dva+antd的骚操作/20180702095537924.jpg" alt=""><br><a id="more"></a></p><h2 id="前言："><a href="#前言：" class="headerlink" title="前言："></a>前言：</h2><p>原谅我直接跳过react的基础，直接就讲react+dva的实际应用，因为直接从项目结构来讲，我觉得学习的成本更低，开发的速度更快，当然有时间的话还是建议冲react的基础学起。</p><p><strong>react的参考资料：</strong><br>建议先从<a href="http://www.ruanyifeng.com/blog/2015/03/react.html" target="_blank" rel="noopener">React 入门实例教程</a>开始学<br><a href="https://blog.csdn.net/awaw00/article/details/54706052" target="_blank" rel="noopener">react的全家桶系列也不错</a></p><p><strong>dva的参考资料：</strong><br><a href="https://dvajs.com/guide/examples-and-boilerplates.html#%E5%AE%98%E6%96%B9" target="_blank" rel="noopener">dva的官方指南</a>有很多不错的脚手架<br><a href="https://ant.design/docs/react/introduce-cn" target="_blank" rel="noopener">ant design</a>组合ant design UI可以说非常方便</p><p><strong>例子</strong><br>实现效果</p><p><img src="/2018/09/12/react+dva+antd的骚操作/20180628230423859.png" alt="image"><br><img src="/2018/09/12/react+dva+antd的骚操作/20180628230449112.png" alt="image"></p><p>前提条件</p><ul><li>确保 node 版本是 6.5 +</li><li>用 cnpm 或 yarn 能节约你安装依赖的时间</li></ul><h2 id="第一步："><a href="#第一步：" class="headerlink" title="第一步："></a>第一步：</h2><p>打开cmd，切换到你要安装的目录，使用npm安装dva-cli<br><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><code class="hljs undefined"><span class="hljs-meta">$</span><span class="bash"> npm i dva-cli@0.7 -g</span><br><span class="hljs-meta">$</span><span class="bash"> dva -v</span><br>0.7.0<br></code></pre></td></tr></table></figure></p><p>然后可以在命令行输入命令创建应用</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><code class="hljs undefined"><span class="hljs-meta">$</span><span class="bash"> dva new user-dashboard</span><br><span class="hljs-meta">$</span><span class="bash"> <span class="hljs-built_in">cd</span> user-dashboard</span><br></code></pre></td></tr></table></figure><h2 id="第二步，"><a href="#第二步，" class="headerlink" title="第二步，"></a>第二步，</h2><p>配置 antd 和 babel-plugin-import<br>babel-plugin-import 主要是用于按需引入 antd 的 JavaScript 和 CSS，这样打包出来的文件不至于太大。详情请看<a href="%28https://dvajs.com/guide/examples-and-boilerplates.html#%E5%AE%98%E6%96%B9">dva</a></p><figure class="highlight elm"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><code class="hljs undefined">$ npm i antd <span class="hljs-comment">--save</span><br>$ npm i babel-plugin-<span class="hljs-keyword">import</span> <span class="hljs-comment">--save-dev</span><br></code></pre></td></tr></table></figure><p>如果dva的版本是在0.7一下的话是没有.roadhogrc文件，修改 .roadhogrc，在 “extraBabelPlugins” 里加上，0.7一下的话是修改.webpackrc文件：</p><figure class="highlight json"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs undefined">[<span class="hljs-string">"import"</span>, &#123; <span class="hljs-attr">"libraryName"</span>: <span class="hljs-string">"antd"</span>, <span class="hljs-attr">"style"</span>: <span class="hljs-string">"css"</span> &#125;]<br></code></pre></td></tr></table></figure><h2 id="第三步，"><a href="#第三步，" class="headerlink" title="第三步，"></a>第三步，</h2><p>配置代理，能通过 RESTFul 的方式访问<br>修改 .roadhogrc，加上 “proxy” 配置，或者修改.webpackrc文件也可：<br>可以通过<a href="http://localhost:8000/api/users来查看json数据" target="_blank" rel="noopener">http://localhost:8000/api/users来查看json数据</a><br><figure class="highlight xquery"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><code class="hljs undefined"><span class="hljs-string">"proxy"</span>: &#123;<br>  <span class="hljs-string">"/api"</span>: &#123;<br>    <span class="hljs-string">"target"</span>: <span class="hljs-string">"http://jsonplaceholder.typicode.com/"</span>,<br>    <span class="hljs-string">"changeOrigin"</span>: true,<br>    <span class="hljs-string">"pathRewrite"</span>: &#123; <span class="hljs-string">"^/api"</span> : <span class="hljs-string">""</span> &#125;<br>  &#125;<br>&#125;,<br></code></pre></td></tr></table></figure></p><p>然后启动应用：可以新开一个命令行窗口</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs undefined"><span class="hljs-meta">$</span><span class="bash"> npm start</span><br></code></pre></td></tr></table></figure><p>然后系统就会自动在浏览器中打开页面，也可以访问<a href="http://localhost:8000/" target="_blank" rel="noopener">http://localhost:8000/</a><br><img src="/2018/09/12/react+dva+antd的骚操作/20180628232050391.png" alt="看到这个图片就可以下一步了"></p><h2 id="第四步，"><a href="#第四步，" class="headerlink" title="第四步，"></a>第四步，</h2><p>生成 users 路由</p><figure class="highlight routeros"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs undefined">dva g<span class="hljs-built_in"> route </span>users<br></code></pre></td></tr></table></figure><p>输入这个命令就会在src的routes生成两个文件，一个User.js,一个是User.css，然后访问 <a href="http://localhost:8000/#/users" target="_blank" rel="noopener">http://localhost:8000/#/users</a> 。</p><h2 id="第五步，"><a href="#第五步，" class="headerlink" title="第五步，"></a>第五步，</h2><p>构造 users model 和 service<br>同上，用dva的命令生成文件</p><figure class="highlight ebnf"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs undefined"><span class="hljs-attribute">dva g model users</span><br></code></pre></td></tr></table></figure><p>然后修改 src/models/users.js ：</p><figure class="highlight xquery"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br></pre></td><td class="code"><pre><code class="hljs undefined"><span class="hljs-keyword">import</span> * <span class="hljs-keyword">as</span> usersService from <span class="hljs-string">'../services/users'</span>;<br><br>export <span class="hljs-keyword">default</span> &#123;<br>  namespace: <span class="hljs-string">'users'</span>,<br>  state: &#123;<br>    list: [],<br>    total: null,<br>  &#125;,<br>  reducers: &#123;<br>    save(state, &#123; payload: &#123; data: list, total &#125; &#125;) &#123;<br>      return &#123; ...state, list, total &#125;;<br>    &#125;,<br>  &#125;,<br>  effects: &#123;<br>    *fetch(&#123; payload: &#123; page &#125; &#125;, &#123; call, put &#125;) &#123;<br>      const &#123; data, headers &#125; = yield call(usersService.fetch, &#123; page &#125;);<br>      yield put(&#123; type: <span class="hljs-string">'save'</span>, payload: &#123; data, total: headers[<span class="hljs-string">'x-total-count'</span>] &#125; &#125;);<br>    &#125;,<br>  &#125;,<br>  subscriptions: &#123;<br>    setup(&#123; dispatch, history &#125;) &#123;<br>      return history.listen((&#123; pathname, query &#125;) =&gt; &#123;<br>        if (pathname === <span class="hljs-string">'/users'</span>) &#123;<br>          dispatch(&#123; type: <span class="hljs-string">'fetch'</span>, payload: query &#125;);<br>        &#125;<br>      &#125;);<br>    &#125;,<br>  &#125;,<br>&#125;;<br></code></pre></td></tr></table></figure><p>在目标文件夹中新增 src/services/users.js：</p><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><code class="hljs undefined"><span class="hljs-keyword">import</span> request <span class="hljs-keyword">from</span> <span class="hljs-string">'../utils/request'</span>;<br><br><span class="hljs-keyword">export</span> <span class="hljs-function"><span class="hljs-keyword">function</span> <span class="hljs-title">fetch</span>(<span class="hljs-params">&#123; page = <span class="hljs-number">1</span> &#125;</span>) </span>&#123;<br>  <span class="hljs-keyword">return</span> request(<span class="hljs-string">`/api/users?_page=<span class="hljs-subst">$&#123;page&#125;</span>&amp;_limit=5`</span>);<br>&#125;<br></code></pre></td></tr></table></figure><p>由于我们需要从 response headers 中获取 total users 数量，所以需要改造下 src/utils/request.js：</p><figure class="highlight vbscript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br></pre></td><td class="code"><pre><code class="hljs undefined">import fetch from <span class="hljs-comment">'dva/fetch';</span><br><br><span class="hljs-keyword">function</span> checkStatus(<span class="hljs-built_in">response</span>) &#123;<br>  <span class="hljs-keyword">if</span> (<span class="hljs-built_in">response</span>.status &gt;= <span class="hljs-number">200</span> &amp;&amp; <span class="hljs-built_in">response</span>.status &lt; <span class="hljs-number">300</span>) &#123;<br>    return <span class="hljs-built_in">response</span>;<br>  &#125;<br><br>  <span class="hljs-keyword">const</span> <span class="hljs-keyword">error</span> = <span class="hljs-keyword">new</span> <span class="hljs-keyword">Error</span>(<span class="hljs-built_in">response</span>.statusText);<br>  <span class="hljs-keyword">error</span>.<span class="hljs-built_in">response</span> = <span class="hljs-built_in">response</span>;<br>  throw <span class="hljs-keyword">error</span>;<br>&#125;<br><br>/**<br> * Requests a URL, returning a promise.<br> *<br> * @param  &#123;<span class="hljs-built_in">string</span>&#125; url       The URL we want <span class="hljs-keyword">to</span> <span class="hljs-built_in">request</span><br> * @param  &#123;object&#125; [options] The options we want <span class="hljs-keyword">to</span> pass <span class="hljs-keyword">to</span> <span class="hljs-string">"fetch"</span><br> * @return &#123;object&#125;           An object containing either <span class="hljs-string">"data"</span> <span class="hljs-keyword">or</span> <span class="hljs-string">"err"</span><br> */<br>export <span class="hljs-keyword">default</span> async <span class="hljs-keyword">function</span> <span class="hljs-built_in">request</span>(url, options) &#123;<br>  <span class="hljs-keyword">const</span> <span class="hljs-built_in">response</span> = await fetch(url, options);<br><br>  checkStatus(<span class="hljs-built_in">response</span>);<br><br>  <span class="hljs-keyword">const</span> data = await <span class="hljs-built_in">response</span>.json();<br><br>  <span class="hljs-keyword">const</span> ret = &#123;<br>    data,<br>    headers: &#123;&#125;,<br>  &#125;;<br><br>  <span class="hljs-keyword">if</span> (<span class="hljs-built_in">response</span>.headers.<span class="hljs-keyword">get</span>(<span class="hljs-comment">'x-total-count')) &#123;</span><br>    ret.headers[<span class="hljs-comment">'x-total-count'] = response.headers.get('x-total-count');</span><br>  &#125;<br><br>  return ret;<br>&#125;<br></code></pre></td></tr></table></figure><h2 id="第六步，"><a href="#第六步，" class="headerlink" title="第六步，"></a>第六步，</h2><p>添加界面，让用户列表展现出来<br>用 dva-cli 生成 component：</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs undefined"><span class="hljs-meta">$</span><span class="bash"> dva g component Users/Users</span><br></code></pre></td></tr></table></figure><p>然后修改生成出来的 src/components/Users/Users.js 和 src/components/Users/Users.css，并在 src/routes/Users.js 中引用他。<br>User.js</p><figure class="highlight xquery"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br><span class="line">94</span><br><span class="line">95</span><br><span class="line">96</span><br><span class="line">97</span><br><span class="line">98</span><br><span class="line">99</span><br><span class="line">100</span><br><span class="line">101</span><br><span class="line">102</span><br><span class="line">103</span><br><span class="line">104</span><br><span class="line">105</span><br><span class="line">106</span><br><span class="line">107</span><br><span class="line">108</span><br><span class="line">109</span><br></pre></td><td class="code"><pre><code class="hljs undefined"><span class="hljs-keyword">import</span> React from <span class="hljs-string">'react'</span>;<br><span class="hljs-keyword">import</span> &#123; connect &#125; from <span class="hljs-string">'dva'</span>;<br><span class="hljs-keyword">import</span> &#123; Table, Pagination, Popconfirm, Button &#125; from <span class="hljs-string">'antd'</span>;<br><span class="hljs-keyword">import</span> &#123; routerRedux &#125; from <span class="hljs-string">'dva/router'</span>;<br><span class="hljs-keyword">import</span> styles from <span class="hljs-string">'./Users.css'</span>;<br><span class="hljs-keyword">import</span> &#123; PAGE_SIZE &#125; from <span class="hljs-string">'../../constants'</span>;<br><span class="hljs-keyword">import</span> UserModal from <span class="hljs-string">'./UserModal'</span>;<br><br><span class="hljs-keyword">function</span> Users(&#123; dispatch, list: dataSource, loading, total, page: current &#125;) &#123;<br><br>  function deleteHandler(id) &#123;<br>    dispatch(&#123;<br>      type: <span class="hljs-string">'users/remove'</span>,<br>      payload: id,<br>    &#125;);<br>  &#125;<br><br>  function editHandler(id, values) &#123;<br>        dispatch(&#123;<br>            type: <span class="hljs-string">'users/patch'</span>,<br>            payload: &#123; id, values &#125;,<br>        &#125;);<br>      &#125;<br><br>  function pageChangeHandler(page) &#123;<br>    dispatch(routerRedux.push(&#123;<br>pathname: <span class="hljs-string">'/users'</span>,<br>    query: &#123; page &#125;,<br> &#125;));<br>  &#125;<br><br>  function createHandler(values) &#123;<br>        dispatch(&#123;<br>            type: <span class="hljs-string">'users/create'</span>,<br>            payload: values,<br>          &#125;);<br>     &#125;<br><br>  const columns = [<br>    &#123;<br>      title: <span class="hljs-string">'姓名'</span>,<br>      dataIndex: <span class="hljs-string">'name'</span>,<br>      key: <span class="hljs-string">'name'</span>,<br>      render: text =&gt; &lt;a href=<span class="hljs-string">""</span>&gt;&#123;text&#125;&lt;/a&gt;,<br>    &#125;,<br>    &#123;<br>      title: <span class="hljs-string">'邮箱'</span>,<br>      dataIndex: <span class="hljs-string">'email'</span>,<br>      key: <span class="hljs-string">'email'</span>,<br>    &#125;,<br>    &#123;<br>      title: <span class="hljs-string">'地址'</span>,<br>      dataIndex: <span class="hljs-string">'website'</span>,<br>      key: <span class="hljs-string">'website'</span>,<br>    &#125;,<br>    &#123;<br>      title: <span class="hljs-string">'操作'</span>,<br>      key: <span class="hljs-string">'operation'</span>,<br>      render: (text, record) =&gt; (<br>        &lt;span className=&#123;styles.operation&#125;&gt;<br>            &lt;UserModal record=&#123;record&#125; onOk=&#123;editHandler.bind(null, record.id)&#125;&gt;<br>            &lt;a&gt;修改&lt;/a&gt;<br>              &lt;/UserModal&gt;<br>            &lt;Popconfirm title=<span class="hljs-string">"Confirm to delete?"</span> onConfirm=&#123;deleteHandler.bind(null, record.id)&#125;&gt;<br>            &lt;a href=<span class="hljs-string">""</span>&gt;删除&lt;/a&gt;<br>          &lt;/Popconfirm&gt;<br>        &lt;/span&gt;<br>      ),<br>    &#125;,<br>  ];<br><br>  return (<br>    &lt;div className=&#123;styles.normal&#125;&gt;<br>      &lt;div&gt;<br>          &lt;div className=&#123;styles.create&#125;&gt;<br>            &lt;UserModal record=&#123;&#123;&#125;&#125; onOk=&#123;createHandler&#125;&gt;<br>                &lt;Button type=<span class="hljs-string">"primary"</span>&gt;增加用户&lt;/Button&gt;<br>            &lt;/UserModal&gt;<br>          &lt;/div&gt;<br>        &lt;Table<br>          columns=&#123;columns&#125;<br>          dataSource=&#123;dataSource&#125;<br>  loading=&#123;loading&#125;<br>          rowKey=&#123;record =&gt; record.id&#125;<br>          pagination=&#123;false&#125;<br>        /&gt;<br>        &lt;Pagination<br>          className=<span class="hljs-string">"ant-table-pagination"</span><br>          total=&#123;total&#125;<br>          current=&#123;current&#125;<br>          pageSize=&#123;PAGE_SIZE&#125;<br>  onChange=&#123;pageChangeHandler&#125;<br>        /&gt;<br>      &lt;/div&gt;<br>    &lt;/div&gt;<br>  );<br>&#125;<br><br><span class="hljs-keyword">function</span> mapStateToProps(state) &#123;<br>  const &#123; list, total, page &#125; = state.users;<br>  return &#123;<br>loading: state.loading.models.users,<br>    list,<br>    total,<br>    page,<br>  &#125;;<br>&#125;<br><br>export <span class="hljs-keyword">default</span> connect(mapStateToProps)(Users);<br></code></pre></td></tr></table></figure><p>User.css</p><figure class="highlight css"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><code class="hljs undefined"><span class="hljs-selector-class">.normal</span> &#123;<br>&#125;<br><span class="hljs-selector-class">.create</span> &#123;<br>  <span class="hljs-attribute">margin-bottom</span>: <span class="hljs-number">1.5em</span>;<br>&#125;<br><br><span class="hljs-selector-class">.operation</span> <span class="hljs-selector-tag">a</span> &#123;<br>  <span class="hljs-attribute">margin</span>: <span class="hljs-number">0</span> .<span class="hljs-number">5em</span>;<br>&#125;<br></code></pre></td></tr></table></figure><p>这边主要是对 model 进行了微调，加入了 page 表示当前页<br>由于 components 和 services 中都用到了 pageSize，所以提取到 src/constants.js<br>改完后，切换到浏览器，应该能看到带分页的用户列表</p><h2 id="第七步，"><a href="#第七步，" class="headerlink" title="第七步，"></a>第七步，</h2><p>添加 layout</p><ol><li>添加 layout 布局，使得我们可以在首页和用户列表页之间来回切换。<br>2.添加布局，src/components/MainLayout/MainLayout.js 和 CSS 文件<br>在 src/routes 文件夹下的文件中引用这个布局</li></ol><figure class="highlight livescript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br></pre></td><td class="code"><pre><code class="hljs undefined"><span class="hljs-keyword">import</span> React <span class="hljs-keyword">from</span> <span class="hljs-string">'react'</span>;<br><span class="hljs-keyword">import</span> &#123; Router, Route &#125; <span class="hljs-keyword">from</span> <span class="hljs-string">'dva/router'</span>;<br><span class="hljs-keyword">import</span> IndexPage <span class="hljs-keyword">from</span> <span class="hljs-string">'./routes/IndexPage'</span>;<br><br><span class="hljs-keyword">import</span> Users <span class="hljs-keyword">from</span> <span class="hljs-string">"./routes/Users.js"</span>;<br><br><span class="hljs-keyword">function</span> RouterConfig(&#123; history &#125;) &#123;<br>  <span class="hljs-keyword">return</span> (<br>    &lt;Router history=&#123;history&#125;&gt;<br>      &lt;Route path=<span class="hljs-string">"/"</span> component=&#123;IndexPage&#125; /&gt;<br>      &lt;Route path=<span class="hljs-string">"/users"</span> component=&#123;Users&#125; /&gt;<br>    &lt;/Router&gt;<br>  );<br>&#125;<br><br><span class="hljs-keyword">export</span> <span class="hljs-keyword">default</span> RouterConfig;<br></code></pre></td></tr></table></figure><h2 id="第八步，"><a href="#第八步，" class="headerlink" title="第八步，"></a>第八步，</h2><p>通过 dva-loading 处理 loading 状态<br>dva 有一个管理 effects 执行的 hook，并基于此封装了 dva-loading 插件。通过这个插件，我们可以不必一遍遍地写 showLoading 和 hideLoading，当发起请求时，插件会自动设置数据里的 loading 状态为 true 或 false 。然后我们在渲染 components 时绑定并根据这个数据进行渲染。</p><p>先安装 dva-loading ：</p><figure class="highlight stylus"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs undefined">npm <span class="hljs-selector-tag">i</span> dva-loading --save<br></code></pre></td></tr></table></figure><p>修改 src/index.js 加载插件，在对应的地方加入下面两句：</p><figure class="highlight clean"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><code class="hljs undefined"><span class="hljs-keyword">import</span> createLoading <span class="hljs-keyword">from</span> <span class="hljs-string">'dva-loading'</span>;<br>app.use(createLoading());<br></code></pre></td></tr></table></figure><p>然后在 src/components/Users/Users.js 里绑定 loading 数据：</p><figure class="highlight pf"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs undefined">loading: <span class="hljs-keyword">state</span>.loading.models.users,<br></code></pre></td></tr></table></figure><p>具体参考这个 <a href="https://github.com/dvajs/dva-example-user-dashboard/commit/e256165312e5fe0e63c29cc1cba96909b66b5092" target="_blank" rel="noopener">例子</a>。</p><h2 id="第九步，"><a href="#第九步，" class="headerlink" title="第九步，"></a>第九步，</h2><p>处理分页<br>只改一个文件 src/components/Users/Users.js 就好。</p><p>处理分页有两个思路：</p><ol><li>发 action，请求新的分页数据，保存到 model，然后自动更新页面</li><li>切换路由 (由于之前监听了路由变化，所以后续的事情会自动处理)<br>我们用的是思路 2 的方式，好处是用户可以直接访问到 page 2 或其他页面。</li></ol><p>参考这个 <a href="https://github.com/dvajs/dva-example-user-dashboard/commit/b6203eae7000225ae1d0954841c93aeec66df1d5" target="_blank" rel="noopener">例子</a>。</p><h2 id="第10步，"><a href="#第10步，" class="headerlink" title="第10步，"></a>第10步，</h2><p>用户的修改，删除，增加都是对三个文件的操作</p><ol><li>service, 修改 src/services/users.js：</li></ol><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br></pre></td><td class="code"><pre><code class="hljs undefined"><span class="hljs-keyword">import</span> request <span class="hljs-keyword">from</span> <span class="hljs-string">'../utils/request'</span>;<br><span class="hljs-keyword">import</span> &#123; PAGE_SIZE &#125; <span class="hljs-keyword">from</span> <span class="hljs-string">'../constants'</span>;<br><br><span class="hljs-keyword">export</span> <span class="hljs-function"><span class="hljs-keyword">function</span> <span class="hljs-title">fetch</span>(<span class="hljs-params">&#123; page &#125;</span>) </span>&#123;<br>  <span class="hljs-keyword">return</span> request(<span class="hljs-string">`/api/users?_page=<span class="hljs-subst">$&#123;page&#125;</span>&amp;_limit=<span class="hljs-subst">$&#123;PAGE_SIZE&#125;</span>`</span>);<br> &#125;<br> <span class="hljs-comment">//删除</span><br><span class="hljs-keyword">export</span> <span class="hljs-function"><span class="hljs-keyword">function</span> <span class="hljs-title">remove</span>(<span class="hljs-params">id</span>) </span>&#123;<br>  <span class="hljs-keyword">return</span> request(<span class="hljs-string">`/api/users/<span class="hljs-subst">$&#123;id&#125;</span>`</span>, &#123;<br>    <span class="hljs-attr">method</span>: <span class="hljs-string">'DELETE'</span>,<br>  &#125;);<br>&#125;<br><span class="hljs-comment">//修改</span><br><span class="hljs-keyword">export</span> <span class="hljs-function"><span class="hljs-keyword">function</span> <span class="hljs-title">patch</span>(<span class="hljs-params">id, values</span>) </span>&#123;<br>  <span class="hljs-keyword">return</span> request(<span class="hljs-string">`/api/users/<span class="hljs-subst">$&#123;id&#125;</span>`</span>, &#123;<br>    <span class="hljs-attr">method</span>: <span class="hljs-string">'PATCH'</span>,<br>    <span class="hljs-attr">body</span>: <span class="hljs-built_in">JSON</span>.stringify(values),<br>    <span class="hljs-attr">headers</span>: &#123;<br>    <span class="hljs-string">'Content-Type'</span>: <span class="hljs-string">'application/json'</span>,<br>      <span class="hljs-string">'Accept'</span>: <span class="hljs-string">'application/json'</span>,<br>  &#125;,<br>  &#125;);<br>&#125;<br><span class="hljs-comment">//新增</span><br><span class="hljs-keyword">export</span> <span class="hljs-function"><span class="hljs-keyword">function</span> <span class="hljs-title">create</span>(<span class="hljs-params">values</span>) </span>&#123;<br>   <span class="hljs-keyword">return</span> request(<span class="hljs-string">'/api/users'</span>, &#123;<br>       <span class="hljs-attr">method</span>: <span class="hljs-string">'POST'</span>,<br>        <span class="hljs-attr">body</span>: <span class="hljs-built_in">JSON</span>.stringify(values),<br>      &#125;);<br>  &#125;<br></code></pre></td></tr></table></figure><ol start="2"><li>model, 修改 src/models/users.js：</li></ol><figure class="highlight xquery"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br></pre></td><td class="code"><pre><code class="hljs undefined"><span class="hljs-keyword">import</span> * <span class="hljs-keyword">as</span> usersService from <span class="hljs-string">'../services/users'</span>;<br><br>export <span class="hljs-keyword">default</span> &#123;<br>  namespace: <span class="hljs-string">'users'</span>,<br>  state: &#123;<br>    list: [],<br>    total: null,<br>    page: null,<br>  &#125;,<br>  reducers: &#123;<br>    save(state, &#123; payload: &#123; data: list, total, page &#125; &#125;) &#123;<br>      return &#123; ...state, list, total, page &#125;;<br>    &#125;,<br>  &#125;,<br>  effects: &#123;<br>  //分页<br>    *fetch(&#123; payload: &#123; page = <span class="hljs-number">1</span> &#125; &#125;, &#123; call, put &#125;) &#123;<br>      const &#123; data, headers &#125; = yield call(usersService.fetch, &#123; page &#125;);<br>      yield put(&#123;<br>        type: <span class="hljs-string">'save'</span>,<br>        payload: &#123;<br>          data,<br>          total: parseInt(headers[<span class="hljs-string">'x-total-count'</span>], <span class="hljs-number">10</span>),<br>          page: parseInt(page, <span class="hljs-number">10</span>),<br>        &#125;,<br>      &#125;);<br>    &#125;,<br>//删除<br>  *remove(&#123; payload: id &#125;, &#123; call, put &#125;) &#123;<br>      yield call(usersService.remove, id);<br>       yield put(&#123; type: <span class="hljs-string">'reload'</span> &#125;);<br>  &#125;,<br>  //修改<br>*patch(&#123; payload: &#123; id, values &#125; &#125;, &#123; call, put &#125;) &#123;<br>    yield call(usersService.patch, id, values);<br>    yield put(&#123; type: <span class="hljs-string">'reload'</span> &#125;);<br>&#125;,<br>//新增<br>*create(&#123; payload: values &#125;, &#123; call, put &#125;) &#123;<br>        yield call(usersService.create, values);<br>       yield put(&#123; type: <span class="hljs-string">'reload'</span> &#125;);<br>      &#125;,<br>  *reload(action, &#123; put, select &#125;) &#123;<br>      const page = yield select(state =&gt; state.users.page);<br>       yield put(&#123; type: <span class="hljs-string">'fetch'</span>, payload: &#123; page &#125; &#125;);<br>  &#125;,<br><br>  &#125;,<br>  subscriptions: &#123;<br>    setup(&#123; dispatch, history &#125;) &#123;<br>      return history.listen((&#123; pathname, query &#125;) =&gt; &#123;<br>        if (pathname === <span class="hljs-string">'/users'</span>) &#123;<br>          dispatch(&#123; type: <span class="hljs-string">'fetch'</span>, payload: query &#125;);<br>        &#125;<br>      &#125;);<br>    &#125;,<br>  &#125;,<br>&#125;;<br></code></pre></td></tr></table></figure><ol start="3"><li>component, 修改 src/components/Users/Users.js，替换 deleteHandler 内容：</li></ol><figure class="highlight xquery"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br><span class="line">94</span><br><span class="line">95</span><br><span class="line">96</span><br><span class="line">97</span><br><span class="line">98</span><br><span class="line">99</span><br><span class="line">100</span><br><span class="line">101</span><br><span class="line">102</span><br><span class="line">103</span><br><span class="line">104</span><br><span class="line">105</span><br><span class="line">106</span><br><span class="line">107</span><br><span class="line">108</span><br><span class="line">109</span><br></pre></td><td class="code"><pre><code class="hljs undefined"><span class="hljs-keyword">import</span> React from <span class="hljs-string">'react'</span>;<br><span class="hljs-keyword">import</span> &#123; connect &#125; from <span class="hljs-string">'dva'</span>;<br><span class="hljs-keyword">import</span> &#123; Table, Pagination, Popconfirm, Button &#125; from <span class="hljs-string">'antd'</span>;<br><span class="hljs-keyword">import</span> &#123; routerRedux &#125; from <span class="hljs-string">'dva/router'</span>;<br><span class="hljs-keyword">import</span> styles from <span class="hljs-string">'./Users.css'</span>;<br><span class="hljs-keyword">import</span> &#123; PAGE_SIZE &#125; from <span class="hljs-string">'../../constants'</span>;<br><span class="hljs-keyword">import</span> UserModal from <span class="hljs-string">'./UserModal'</span>;<br><br><span class="hljs-keyword">function</span> Users(&#123; dispatch, list: dataSource, loading, total, page: current &#125;) &#123;<br>//删除<br>  function deleteHandler(id) &#123;<br>    dispatch(&#123;<br>      type: <span class="hljs-string">'users/remove'</span>,<br>      payload: id,<br>    &#125;);<br>  &#125;<br>//修改<br>  function editHandler(id, values) &#123;<br>        dispatch(&#123;<br>            type: <span class="hljs-string">'users/patch'</span>,<br>            payload: &#123; id, values &#125;,<br>        &#125;);<br>      &#125;<br>//分页<br>  function pageChangeHandler(page) &#123;<br>    dispatch(routerRedux.push(&#123;<br>pathname: <span class="hljs-string">'/users'</span>,<br>    query: &#123; page &#125;,<br> &#125;));<br>  &#125;<br>//新增<br>  function createHandler(values) &#123;<br>        dispatch(&#123;<br>            type: <span class="hljs-string">'users/create'</span>,<br>            payload: values,<br>          &#125;);<br>     &#125;<br><br>  const columns = [<br>    &#123;<br>      title: <span class="hljs-string">'姓名'</span>,<br>      dataIndex: <span class="hljs-string">'name'</span>,<br>      key: <span class="hljs-string">'name'</span>,<br>      render: text =&gt; &lt;a href=<span class="hljs-string">""</span>&gt;&#123;text&#125;&lt;/a&gt;,<br>    &#125;,<br>    &#123;<br>      title: <span class="hljs-string">'邮箱'</span>,<br>      dataIndex: <span class="hljs-string">'email'</span>,<br>      key: <span class="hljs-string">'email'</span>,<br>    &#125;,<br>    &#123;<br>      title: <span class="hljs-string">'地址'</span>,<br>      dataIndex: <span class="hljs-string">'website'</span>,<br>      key: <span class="hljs-string">'website'</span>,<br>    &#125;,<br>    &#123;<br>      title: <span class="hljs-string">'操作'</span>,<br>      key: <span class="hljs-string">'operation'</span>,<br>      render: (text, record) =&gt; (<br>        &lt;span className=&#123;styles.operation&#125;&gt;<br>            &lt;UserModal record=&#123;record&#125; onOk=&#123;editHandler.bind(null, record.id)&#125;&gt;<br>            &lt;a&gt;修改&lt;/a&gt;<br>              &lt;/UserModal&gt;<br>            &lt;Popconfirm title=<span class="hljs-string">"Confirm to delete?"</span> onConfirm=&#123;deleteHandler.bind(null, record.id)&#125;&gt;<br>            &lt;a href=<span class="hljs-string">""</span>&gt;删除&lt;/a&gt;<br>          &lt;/Popconfirm&gt;<br>        &lt;/span&gt;<br>      ),<br>    &#125;,<br>  ];<br><br>  return (<br>    &lt;div className=&#123;styles.normal&#125;&gt;<br>      &lt;div&gt;<br>          &lt;div className=&#123;styles.create&#125;&gt;<br>            &lt;UserModal record=&#123;&#123;&#125;&#125; onOk=&#123;createHandler&#125;&gt;<br>                &lt;Button type=<span class="hljs-string">"primary"</span>&gt;增加用户&lt;/Button&gt;<br>            &lt;/UserModal&gt;<br>          &lt;/div&gt;<br>        &lt;Table<br>          columns=&#123;columns&#125;<br>          dataSource=&#123;dataSource&#125;<br>  loading=&#123;loading&#125;<br>          rowKey=&#123;record =&gt; record.id&#125;<br>          pagination=&#123;false&#125;<br>        /&gt;<br>        &lt;Pagination<br>          className=<span class="hljs-string">"ant-table-pagination"</span><br>          total=&#123;total&#125;<br>          current=&#123;current&#125;<br>          pageSize=&#123;PAGE_SIZE&#125;<br>  onChange=&#123;pageChangeHandler&#125;<br>        /&gt;<br>      &lt;/div&gt;<br>    &lt;/div&gt;<br>  );<br>&#125;<br><br><span class="hljs-keyword">function</span> mapStateToProps(state) &#123;<br>  const &#123; list, total, page &#125; = state.users;<br>  return &#123;<br>loading: state.loading.models.users,<br>    list,<br>    total,<br>    page,<br>  &#125;;<br>&#125;<br><br>export <span class="hljs-keyword">default</span> connect(mapStateToProps)(Users);<br></code></pre></td></tr></table></figure><p>以上就是react+dva+antd实现的一个简单的增删改的操作例子。</p>]]></content>
    
    <summary type="html">
    
      &lt;p&gt;&lt;img src=&quot;/2018/09/12/react+dva+antd的骚操作/20180702095537924.jpg&quot; alt=&quot;&quot;&gt;&lt;br&gt;&lt;/p&gt;
    
    </summary>
    
    
      <category term="react" scheme="http://yoursite.com/tags/react/"/>
    
  </entry>
  
  <entry>
    <title>ssh框架整合之登录以及增删改查</title>
    <link href="http://yoursite.com/2018/09/12/ssh%E5%A2%9E%E5%88%A0%E6%94%B9%E6%9F%A5/"/>
    <id>http://yoursite.com/2018/09/12/ssh增删改查/</id>
    <published>2018-09-12T07:48:00.000Z</published>
    <updated>2018-09-12T11:56:20.843Z</updated>
    
    <content type="html"><![CDATA[<p><img src="/2018/09/12/ssh增删改查/1143999-20170606103010434-1778377011.png" alt=""><br>1.首先阐述一下我用得开发工具，myeclipse2017+oracle,所以我的基本配置步骤可能不一样，下面我用几张图来详解我的开发步骤。</p><p>—1先配置structs<br><img src="/2018/09/12/ssh增删改查/1143999-20170606094055575-2006174539.png" alt=""></p><p><img src="/2018/09/12/ssh增删改查/1143999-20170606094302559-1725906581.png" alt=""></p><p>(Target 选择apache Tomcat (我的版本是8.0))接下来next</p><p><img src="/2018/09/12/ssh增删改查/1143999-20170606094408668-1864863121.png" alt=""></p><p>依然next,勾选复选框，把Core里面得第一个antlr-2.7.2.jar，因为这个包可能会和hibernate里面得一些包冲突</p><p><img src="/2018/09/12/ssh增删改查/1143999-20170606094447543-277300840.png" alt=""></p><p>去掉之后选择下面的spring plus 勾上然后点finsh,然后structs 就配置好了</p><p>—2配置spring<br><img src="/2018/09/12/ssh增删改查/1143999-20170606094447543-277300840.png" alt=""></p><p>spring直接finsh</p><p>—3hibernte配置</p><p><img src="/2018/09/12/ssh增删改查/1143999-20170606094805450-2033214141.png" alt=""></p><p>第二步，要选4.1，5.1不支持</p><p><img src="/2018/09/12/ssh增删改查/1143999-20170606094854731-992034947.png" alt=""></p><p>第三部去掉create 复选框myeclipse会自动安排</p><p><img src="/2018/09/12/ssh增删改查/1143999-20170606095002372-801559167.png" alt=""></p><p> 然后之前我是已经创建了hibernate到oracle数据库的连接，所以我直接就next</p><p><img src="/2018/09/12/ssh增删改查/1143999-20170606095429278-884296069.png" alt=""></p><p>如果hibernate没有连接自己的数据库，要先去配置连接，选择hibernate</p><p><img src="/2018/09/12/ssh增删改查/1143999-20170606095643903-472610646.png" alt=""></p><p>然后点击myeclipse derby去新建连接</p><p>（最后注意一下在配置安装hibernate之前最好先建一个包用来存放数据库表的pojo类）</p><p>二.基本配置好了之后，接下来就是具体的事物了</p><p>1.编写Dao接口</p><p><img src="/2018/09/12/ssh增删改查/1143999-20170606095938247-1334465030.png" alt=""></p><p><img src="/2018/09/12/ssh增删改查/1143999-20170606100007372-368092140.png" alt=""></p><p> 2.编写完接口之后，再来写接口的实现类<br><img src="/2018/09/12/ssh增删改查/1143999-20170606100420512-2069176524.png" alt=""></p><p><img src="/2018/09/12/ssh增删改查/1143999-20170606100428075-198903208.png" alt=""></p><p><img src="/2018/09/12/ssh增删改查/1143999-20170606100645418-569520067.png" alt=""></p><p><img src="/2018/09/12/ssh增删改查/1143999-20170606100734184-1401136284.png" alt=""></p><p><img src="/2018/09/12/ssh增删改查/1143999-20170606100751512-1903603844.png" alt=""></p><p><img src="/2018/09/12/ssh增删改查/1143999-20170606100804075-1166028383.png" alt=""></p><p><img src="/2018/09/12/ssh增删改查/1143999-20170606100845512-619773047.png" alt=""></p><p><img src="/2018/09/12/ssh增删改查/1143999-20170606100907465-541564509.png" alt=""></p><p><img src="/2018/09/12/ssh增删改查/1143999-20170606100922872-276792008.png" alt=""></p><p> 三.写service接口，和dao 接口是一样的复制过来就行，我就不上图了</p><p>四.service接口实现类</p><p><img src="/2018/09/12/ssh增删改查/1143999-20170606101113043-1441298189.png" alt=""></p><p><img src="/2018/09/12/ssh增删改查/1143999-20170606101141950-966486006.png" alt=""></p><p>接口实现类里面调用方法即可</p><p>五.hibernate核心配置文件是applicationContext.xml如果成功配置数据库会直接在src里生成，并映射好数据库表以及连接池，这里面要配置的主要是action，service，dao，spring管理hibernate,定义事务管理器 ，以及事物管理机制，最后aop切面类　　</p><p><img src="/2018/09/12/ssh增删改查/1143999-20170606101605059-1947552575.png" alt=""></p><p><img src="/2018/09/12/ssh增删改查/1143999-20170606101957622-504089103.png" alt=""></p><p>这里一定要对应自己的包名，然后是structs配置（structs主要是控制跳转，接受来之action类里面的值然后传输到页面）</p><p><img src="/2018/09/12/ssh增删改查/1143999-20170606101605059-1947552575.png" alt=""></p><p>六.是我的jsp页面</p><p><img src="/2018/09/12/ssh增删改查/1143999-20170606102234184-19105698.png" alt=""></p><p>1.登录页面</p><p><img src="/2018/09/12/ssh增删改查/1143999-20170606103010434-1778377011.png" alt=""></p><p>首页</p><p><img src="/2018/09/12/ssh增删改查/1143999-20170606103340856-2118343184.png" alt=""></p><p>最后总结一下吧！ssh学习的新手，开发过程中困难重重，遇到了不少问题，花了不少时间，不过也确实学到了不少东西，页面排版不太好，请多多理解，如果有什么纰漏和错误也希望大家给予指出，有问题可以留言。</p>]]></content>
    
    <summary type="html">
    
      
      
        &lt;p&gt;&lt;img src=&quot;/2018/09/12/ssh增删改查/1143999-20170606103010434-1778377011.png&quot; alt=&quot;&quot;&gt;&lt;br&gt;1.首先阐述一下我用得开发工具，myeclipse2017+oracle,所以我的基本配置步骤可能不一样，下
      
    
    </summary>
    
      <category term="框架" scheme="http://yoursite.com/categories/%E6%A1%86%E6%9E%B6/"/>
    
    
      <category term="ssh" scheme="http://yoursite.com/tags/ssh/"/>
    
  </entry>
  
  <entry>
    <title>jsp+servlet实现模糊查询和分页效果</title>
    <link href="http://yoursite.com/2018/09/12/jsp/"/>
    <id>http://yoursite.com/2018/09/12/jsp/</id>
    <published>2018-09-12T07:18:00.000Z</published>
    <updated>2018-09-12T11:23:37.374Z</updated>
    
    <content type="html"><![CDATA[<p>1.DAO+MVC包</p><p><img src="/2018/09/12/jsp/1143999-20170503164702164-1976520947.png" alt=""></p><p><img src="/2018/09/12/jsp/1143999-20170503165024664-826049266.png" alt=""></p><p>2.DAO接口方法定义</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br></pre></td><td class="code"><pre><code class="hljs undefined"><span class="hljs-keyword">package</span> com.wanczy.dao;<br><br><span class="hljs-keyword">import</span> java.math.BigDecimal;<br><span class="hljs-keyword">import</span> java.util.List;<br><br><span class="hljs-keyword">import</span> com.wanczy.pojo.CustomerResourcePOJO;<br><br><span class="hljs-keyword">public</span> <span class="hljs-class"><span class="hljs-keyword">interface</span> <span class="hljs-title">CustomerResourceDAO</span> </span>&#123;<br> <span class="hljs-comment">/**<br>  *<br>  * <span class="hljs-doctag">@param</span> sName学校名称<br>  * <span class="hljs-doctag">@param</span> cLevel合作等级<br>  * <span class="hljs-doctag">@param</span> cState合作状态<br>  * <span class="hljs-doctag">@param</span> pageSize一页显示数据的笔数<br>  * <span class="hljs-doctag">@param</span> pageCurrent显示的页数<br>  * <span class="hljs-doctag">@return</span><br>  */</span><br> <span class="hljs-comment">//根据名字水平状态来查询数据，传入页数及当前页数</span><br> <span class="hljs-function"><span class="hljs-keyword">public</span> List&lt;CustomerResourcePOJO&gt; <span class="hljs-title">findByNameLevelState</span> <span class="hljs-params">(String sName,<span class="hljs-keyword">int</span> cLevel,<span class="hljs-keyword">int</span> cState,<span class="hljs-keyword">int</span> pageSize,<span class="hljs-keyword">int</span> pageCurrent)</span></span>;<br> <span class="hljs-comment">//查询数据笔数</span><br> <span class="hljs-function"><span class="hljs-keyword">public</span> <span class="hljs-keyword">int</span> <span class="hljs-title">findCountByNameLevelState</span><span class="hljs-params">(String sName,<span class="hljs-keyword">int</span> cLevel,<span class="hljs-keyword">int</span> cState)</span></span>;<br> <span class="hljs-comment">//查询单笔数据</span><br> <span class="hljs-function"><span class="hljs-keyword">public</span>  CustomerResourcePOJO <span class="hljs-title">findByCId</span><span class="hljs-params">(BigDecimal cID)</span></span>;<br> <span class="hljs-comment">//修改</span><br> <span class="hljs-function"><span class="hljs-keyword">public</span> <span class="hljs-keyword">boolean</span> <span class="hljs-title">doUpd</span><span class="hljs-params">(CustomerResourcePOJO pojo)</span></span>;<br> <span class="hljs-comment">//新增</span><br> <span class="hljs-function"><span class="hljs-keyword">public</span> <span class="hljs-keyword">boolean</span> <span class="hljs-title">doIns</span><span class="hljs-params">(CustomerResourcePOJO pojo)</span></span>;<br> <span class="hljs-comment">//删除</span><br> <span class="hljs-function"><span class="hljs-keyword">public</span> <span class="hljs-keyword">boolean</span> <span class="hljs-title">doDel</span><span class="hljs-params">(BigDecimal cID)</span></span>;<br>&#125;<br></code></pre></td></tr></table></figure><p>3.DAO接口方法实现方法</p><figure class="highlight gradle"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br><span class="line">94</span><br><span class="line">95</span><br><span class="line">96</span><br><span class="line">97</span><br><span class="line">98</span><br><span class="line">99</span><br><span class="line">100</span><br><span class="line">101</span><br><span class="line">102</span><br><span class="line">103</span><br><span class="line">104</span><br><span class="line">105</span><br><span class="line">106</span><br><span class="line">107</span><br><span class="line">108</span><br><span class="line">109</span><br><span class="line">110</span><br><span class="line">111</span><br><span class="line">112</span><br><span class="line">113</span><br><span class="line">114</span><br><span class="line">115</span><br><span class="line">116</span><br><span class="line">117</span><br><span class="line">118</span><br><span class="line">119</span><br><span class="line">120</span><br><span class="line">121</span><br><span class="line">122</span><br><span class="line">123</span><br><span class="line">124</span><br><span class="line">125</span><br><span class="line">126</span><br><span class="line">127</span><br><span class="line">128</span><br><span class="line">129</span><br><span class="line">130</span><br><span class="line">131</span><br><span class="line">132</span><br><span class="line">133</span><br><span class="line">134</span><br><span class="line">135</span><br><span class="line">136</span><br><span class="line">137</span><br><span class="line">138</span><br><span class="line">139</span><br><span class="line">140</span><br><span class="line">141</span><br><span class="line">142</span><br><span class="line">143</span><br><span class="line">144</span><br><span class="line">145</span><br><span class="line">146</span><br><span class="line">147</span><br><span class="line">148</span><br><span class="line">149</span><br><span class="line">150</span><br><span class="line">151</span><br><span class="line">152</span><br><span class="line">153</span><br><span class="line">154</span><br><span class="line">155</span><br><span class="line">156</span><br><span class="line">157</span><br><span class="line">158</span><br><span class="line">159</span><br><span class="line">160</span><br><span class="line">161</span><br><span class="line">162</span><br><span class="line">163</span><br><span class="line">164</span><br><span class="line">165</span><br><span class="line">166</span><br><span class="line">167</span><br><span class="line">168</span><br><span class="line">169</span><br><span class="line">170</span><br><span class="line">171</span><br><span class="line">172</span><br><span class="line">173</span><br><span class="line">174</span><br><span class="line">175</span><br><span class="line">176</span><br><span class="line">177</span><br><span class="line">178</span><br><span class="line">179</span><br><span class="line">180</span><br><span class="line">181</span><br><span class="line">182</span><br><span class="line">183</span><br><span class="line">184</span><br><span class="line">185</span><br><span class="line">186</span><br><span class="line">187</span><br><span class="line">188</span><br><span class="line">189</span><br><span class="line">190</span><br><span class="line">191</span><br><span class="line">192</span><br><span class="line">193</span><br><span class="line">194</span><br><span class="line">195</span><br><span class="line">196</span><br><span class="line">197</span><br><span class="line">198</span><br><span class="line">199</span><br><span class="line">200</span><br><span class="line">201</span><br><span class="line">202</span><br><span class="line">203</span><br><span class="line">204</span><br><span class="line">205</span><br><span class="line">206</span><br><span class="line">207</span><br><span class="line">208</span><br><span class="line">209</span><br><span class="line">210</span><br><span class="line">211</span><br><span class="line">212</span><br><span class="line">213</span><br><span class="line">214</span><br><span class="line">215</span><br><span class="line">216</span><br><span class="line">217</span><br><span class="line">218</span><br><span class="line">219</span><br><span class="line">220</span><br><span class="line">221</span><br><span class="line">222</span><br><span class="line">223</span><br><span class="line">224</span><br><span class="line">225</span><br><span class="line">226</span><br><span class="line">227</span><br><span class="line">228</span><br><span class="line">229</span><br><span class="line">230</span><br><span class="line">231</span><br><span class="line">232</span><br><span class="line">233</span><br><span class="line">234</span><br><span class="line">235</span><br><span class="line">236</span><br></pre></td><td class="code"><pre><code class="hljs undefined"><span class="hljs-keyword">package</span> com.wanczy.dao.impl;<br><br><span class="hljs-keyword">import</span> java.math.BigDecimal;<br><span class="hljs-keyword">import</span> java.sql.Connection;<br><span class="hljs-keyword">import</span> java.sql.PreparedStatement;<br><span class="hljs-keyword">import</span> java.sql.ResultSet;<br><span class="hljs-keyword">import</span> java.util.ArrayList;<br><span class="hljs-keyword">import</span> java.util.List;<br><br><span class="hljs-keyword">import</span> com.wanczy.dao.CustomerResourceDAO;<br><span class="hljs-keyword">import</span> com.wanczy.pojo.CustomerResourcePOJO;<br><br><span class="hljs-keyword">public</span> <span class="hljs-keyword">class</span> CustomerResourceDAOImpl <span class="hljs-keyword">implements</span> CustomerResourceDAO &#123;<br> Connection conn ;<br> <span class="hljs-keyword">public</span> CustomerResourceDAOImpl(Connection conn)&#123;<br>  <span class="hljs-keyword">this</span>.conn = conn;<br> &#125;<br> <span class="hljs-keyword">public</span> <span class="hljs-keyword">boolean</span> doDel(BigDecimal cID) &#123;<br>  <span class="hljs-keyword">boolean</span> flag = <span class="hljs-keyword">false</span>;<br>  PreparedStatement pstate = <span class="hljs-keyword">null</span>;<br>  <span class="hljs-keyword">try</span> &#123;<br>   <span class="hljs-keyword">this</span>.conn.setAutoCommit(<span class="hljs-keyword">false</span>);<br>   String sql = <span class="hljs-string">"delete from customer_resource where c_id = ?"</span>;<br>   pstate = <span class="hljs-keyword">this</span>.conn.prepareStatement(sql);<br>   pstate.setBigDecimal(<span class="hljs-number">1</span>, cID);<br>   pstate.execute();<span class="hljs-comment">//执行</span><br>   <span class="hljs-keyword">this</span>.conn.commit();<br>   flag = <span class="hljs-keyword">true</span>;<br>  &#125; <span class="hljs-keyword">catch</span> (Exception e) &#123;<br>   e.printStackTrace();<br>   <span class="hljs-keyword">try</span> &#123;<br>    <span class="hljs-keyword">this</span>.conn.rollback();<br>   &#125; <span class="hljs-keyword">catch</span> (Exception e2) &#123;<br>    e2.printStackTrace();<br>    <span class="hljs-comment">// <span class="hljs-doctag">TODO:</span> handle exception</span><br>   &#125;<br>   <span class="hljs-comment">// <span class="hljs-doctag">TODO:</span> handle exception</span><br>  &#125; <span class="hljs-keyword">finally</span>&#123;<br>   <span class="hljs-keyword">try</span> &#123;<br>    pstate.close();<br>   &#125; <span class="hljs-keyword">catch</span> (Exception e2) &#123;<br>    e2.printStackTrace();<br>    <span class="hljs-comment">// <span class="hljs-doctag">TODO:</span> handle exception</span><br>   &#125;<br>  &#125;<br>  <span class="hljs-keyword">return</span> flag;<br> &#125;<br><br> <span class="hljs-keyword">public</span> <span class="hljs-keyword">boolean</span> doIns(CustomerResourcePOJO pojo) &#123;<br>  <span class="hljs-keyword">boolean</span> flag = <span class="hljs-keyword">false</span>;<br>  PreparedStatement pstate = <span class="hljs-keyword">null</span>;<br>  <span class="hljs-keyword">try</span> &#123;<br>   <span class="hljs-keyword">this</span>.conn.setAutoCommit(<span class="hljs-keyword">false</span>);<br>   String sql = <span class="hljs-string">"insert into customer_resource (c_id, s_name, s_add, "</span> +<br>      <span class="hljs-string">"s_link_man, s_link_tel, c_level, c_state ,s_leader, s_leader_tel)"</span> +<br>      <span class="hljs-string">"values(scott_squence.nextval,?,?,?,?,?,?,?,?)"</span>;<br>   pstate = <span class="hljs-keyword">this</span>.conn.prepareStatement(sql);<br>   pstate.setString(<span class="hljs-number">1</span>,pojo.getSname());<br>   pstate.setString(<span class="hljs-number">2</span>,pojo.getSadd());<br>   pstate.setString(<span class="hljs-number">3</span>,pojo.getSlinkMan());<br>   pstate.setString(<span class="hljs-number">4</span>,pojo.getSlinkTel());<br>   pstate.setInt(<span class="hljs-number">5</span>,pojo.getClevel());<br>   pstate.setInt(<span class="hljs-number">6</span>,pojo.getCstate());<br>   pstate.setString(<span class="hljs-number">7</span>,pojo.getSleader());<br>   pstate.setString(<span class="hljs-number">8</span>,pojo.getSleaderTel());<br>   pstate.execute();<span class="hljs-comment">//执行</span><br>   <span class="hljs-keyword">this</span>.conn.commit();<br>   flag = <span class="hljs-keyword">true</span>;<br>  &#125; <span class="hljs-keyword">catch</span> (Exception e) &#123;<br>   e.printStackTrace();<br>   <span class="hljs-keyword">try</span> &#123;<br>    <span class="hljs-keyword">this</span>.conn.rollback();<br>   &#125; <span class="hljs-keyword">catch</span> (Exception e2) &#123;<br>    e2.printStackTrace();<br>    <span class="hljs-comment">// <span class="hljs-doctag">TODO:</span> handle exception</span><br>   &#125;<br>   <span class="hljs-comment">// <span class="hljs-doctag">TODO:</span> handle exception</span><br>  &#125; <span class="hljs-keyword">finally</span>&#123;<br>   <span class="hljs-keyword">try</span> &#123;<br>    pstate.close();<br>   &#125; <span class="hljs-keyword">catch</span> (Exception e2) &#123;<br>    e2.printStackTrace();<br>    <span class="hljs-comment">// <span class="hljs-doctag">TODO:</span> handle exception</span><br>   &#125;<br>  &#125;<br>  <span class="hljs-keyword">return</span> flag;<br> &#125;<br><br> <span class="hljs-keyword">public</span> <span class="hljs-keyword">boolean</span> doUpd(CustomerResourcePOJO pojo) &#123;<br>  <span class="hljs-keyword">boolean</span> flag = <span class="hljs-keyword">false</span>;<br>  PreparedStatement pstate = <span class="hljs-keyword">null</span>;<br>  <span class="hljs-keyword">try</span> &#123;<br>   <span class="hljs-keyword">this</span>.conn.setAutoCommit(<span class="hljs-keyword">false</span>);<br>   String sql = <span class="hljs-string">"update  customer_resource set s_name=?, s_add=?, "</span> +<br>      <span class="hljs-string">" s_link_man=?, s_link_tel=?, c_level=?, c_state=? ,s_leader=?, s_leader_tel=? where"</span> +<br>      <span class="hljs-string">" c_id = ?"</span>;<br>   pstate = <span class="hljs-keyword">this</span>.conn.prepareStatement(sql);<br>   pstate.setString(<span class="hljs-number">1</span>,pojo.getSname());<br>   pstate.setString(<span class="hljs-number">2</span>,pojo.getSadd());<br>   pstate.setString(<span class="hljs-number">3</span>,pojo.getSlinkMan());<br>   pstate.setString(<span class="hljs-number">4</span>,pojo.getSlinkTel());<br>   pstate.setInt(<span class="hljs-number">5</span>,pojo.getClevel());<br>   pstate.setInt(<span class="hljs-number">6</span>,pojo.getCstate());<br>   pstate.setString(<span class="hljs-number">7</span>,pojo.getSleader());<br>   pstate.setString(<span class="hljs-number">8</span>,pojo.getSleaderTel());<br>   pstate.setBigDecimal(<span class="hljs-number">9</span>, pojo.getCid());<br>   pstate.execute();<span class="hljs-comment">//执行</span><br>   <span class="hljs-keyword">this</span>.conn.commit();<br>   flag = <span class="hljs-keyword">true</span>;<br>  &#125; <span class="hljs-keyword">catch</span> (Exception e) &#123;<br>   e.printStackTrace();<br>   <span class="hljs-keyword">try</span> &#123;<br>    <span class="hljs-keyword">this</span>.conn.rollback();<br>   &#125; <span class="hljs-keyword">catch</span> (Exception e2) &#123;<br>    e2.printStackTrace();<br>    <span class="hljs-comment">// <span class="hljs-doctag">TODO:</span> handle exception</span><br>   &#125;<br>   <span class="hljs-comment">// <span class="hljs-doctag">TODO:</span> handle exception</span><br>  &#125; <span class="hljs-keyword">finally</span>&#123;<br>   <span class="hljs-keyword">try</span> &#123;<br>    pstate.close();<br>   &#125; <span class="hljs-keyword">catch</span> (Exception e2) &#123;<br>    e2.printStackTrace();<br>    <span class="hljs-comment">// <span class="hljs-doctag">TODO:</span> handle exception</span><br>   &#125;<br>  &#125;<br>  <span class="hljs-keyword">return</span> flag;<br> &#125;<br><br> <span class="hljs-keyword">public</span> CustomerResourcePOJO findByCId(BigDecimal cID) &#123;<br>  CustomerResourcePOJO pojo = <span class="hljs-keyword">null</span>;<br>  PreparedStatement pstate = <span class="hljs-keyword">null</span>;<br>  ResultSet res = <span class="hljs-keyword">null</span>;<br>  <span class="hljs-keyword">try</span> &#123;<br>   String sql = <span class="hljs-string">"select  s_name, s_add, "</span> +<br>      <span class="hljs-string">"s_link_man, s_link_tel, c_level, c_state ,s_leader, s_leader_tel  from customer_resource where c_id = ?"</span>;<br>   pstate = <span class="hljs-keyword">this</span>.conn.prepareStatement(sql);<br>   pstate.setBigDecimal(<span class="hljs-number">1</span>, cID);<br>   res = pstate.executeQuery();<br>   <span class="hljs-keyword">while</span>(res.<span class="hljs-keyword">next</span>())&#123;<br>    pojo = <span class="hljs-keyword">new</span> CustomerResourcePOJO(cID,res.getString(<span class="hljs-number">1</span>),res.getString(<span class="hljs-number">2</span>),<br>      res.getString(<span class="hljs-number">3</span>),res.getString(<span class="hljs-number">4</span>),res.getInt(<span class="hljs-number">5</span>),res.getInt(<span class="hljs-number">6</span>),<br>      res.getString(<span class="hljs-number">7</span>),res.getString(<span class="hljs-number">8</span>));<br>    <br>   &#125;<br>  &#125; <span class="hljs-keyword">catch</span> (Exception e) &#123;<br>   e.printStackTrace();<br>   <span class="hljs-comment">// <span class="hljs-doctag">TODO:</span> handle exception</span><br>  &#125; <span class="hljs-keyword">finally</span>&#123;<br>   <span class="hljs-keyword">try</span> &#123;<br>    res.close();<br>    pstate.close();<br>   &#125; <span class="hljs-keyword">catch</span> (Exception e2) &#123;<br>    e2.printStackTrace();<br>   &#125;<br>  &#125;<br>  <span class="hljs-keyword">return</span> pojo;<br> &#125;<br><br> <span class="hljs-keyword">public</span> List&lt;CustomerResourcePOJO&gt; findByNameLevelState(String sName,<br>  <span class="hljs-keyword">int</span> cLevel, <span class="hljs-keyword">int</span> cState, <span class="hljs-keyword">int</span> pageSize, <span class="hljs-keyword">int</span> pageCurrent) &#123;<br>  List&lt;CustomerResourcePOJO&gt; list = <span class="hljs-keyword">new</span> ArrayList&lt;CustomerResourcePOJO&gt;();<br>  PreparedStatement pstate = <span class="hljs-keyword">null</span>;<br>  ResultSet res = <span class="hljs-keyword">null</span>;<br>  <span class="hljs-keyword">try</span> &#123;<br>   StringBuffer sql = <span class="hljs-keyword">new</span> StringBuffer();<br>   sql.<span class="hljs-keyword">append</span>(<span class="hljs-string">"select c_id,s_name, s_add, s_link_man, "</span>+<br>   <span class="hljs-string">" s_link_tel, c_level, c_state ,s_leader,  "</span>+<br>   <span class="hljs-string">" s_leader_tel from (select  c_id,s_name, s_add, s_link_man,  "</span>+<br>   <span class="hljs-string">" s_link_tel, c_level, c_state ,s_leader,  "</span>+<br>   <span class="hljs-string">" s_leader_tel ,rownum abc  "</span>+<br>   <span class="hljs-string">" from customer_resource where s_name like ? "</span>);<br>   <span class="hljs-keyword">if</span>(cLevel != <span class="hljs-number">0</span>)&#123;<br>    sql.<span class="hljs-keyword">append</span>(<span class="hljs-string">" and c_level = "</span>+cLevel);<br>   &#125;<br>   <span class="hljs-keyword">if</span>(cState != <span class="hljs-number">0</span>)&#123;<br>    sql.<span class="hljs-keyword">append</span>(<span class="hljs-string">" and c_state = "</span>+cState);<br>   &#125;<br>   sql.<span class="hljs-keyword">append</span>(<span class="hljs-string">" ) where abc&gt;? and abc&lt;=? order by c_level,c_state"</span>);<br>   pstate = <span class="hljs-keyword">this</span>.conn.prepareStatement(sql.toString());<br>   pstate.setString(<span class="hljs-number">1</span>, <span class="hljs-string">"%"</span>+sName+<span class="hljs-string">"%"</span>);<br>   pstate.setInt(<span class="hljs-number">2</span>, (pageCurrent-<span class="hljs-number">1</span>)*pageSize);<br>   pstate.setInt(<span class="hljs-number">3</span>, pageCurrent*pageSize);<br>   res = pstate.executeQuery();<br>   <span class="hljs-keyword">while</span>(res.<span class="hljs-keyword">next</span>())&#123;<br>    CustomerResourcePOJO pojo = <span class="hljs-keyword">new</span> CustomerResourcePOJO(res.getBigDecimal(<span class="hljs-number">1</span>),res.getString(<span class="hljs-number">2</span>),res.getString(<span class="hljs-number">3</span>),<br>      res.getString(<span class="hljs-number">4</span>),res.getString(<span class="hljs-number">5</span>),res.getInt(<span class="hljs-number">6</span>),res.getInt(<span class="hljs-number">7</span>),<br>      res.getString(<span class="hljs-number">8</span>),res.getString(<span class="hljs-number">9</span>));<br>    list.add(pojo);<br>    <br>   &#125;<br>  &#125; <span class="hljs-keyword">catch</span> (Exception e) &#123;<br>   e.printStackTrace();<br>   <span class="hljs-comment">// <span class="hljs-doctag">TODO:</span> handle exception</span><br>  &#125; <span class="hljs-keyword">finally</span>&#123;<br>   <span class="hljs-keyword">try</span> &#123;<br>    res.close();<br>    pstate.close();<br>   &#125; <span class="hljs-keyword">catch</span> (Exception e2) &#123;<br>    e2.printStackTrace();<br>   &#125;<br>  &#125;<br>  <span class="hljs-keyword">return</span> list;<br> &#125;<br><span class="hljs-comment">//查询单笔数据</span><br> <span class="hljs-keyword">public</span> <span class="hljs-keyword">int</span> findCountByNameLevelState(String sName, <span class="hljs-keyword">int</span> cLevel, <span class="hljs-keyword">int</span> cState) &#123;<br>  <span class="hljs-keyword">int</span> <span class="hljs-keyword">count</span> = <span class="hljs-number">0</span>;<br>  PreparedStatement pstate = <span class="hljs-keyword">null</span>;<br>  ResultSet res = <span class="hljs-keyword">null</span>;<br>  <span class="hljs-keyword">try</span> &#123;<br>   StringBuffer sql = <span class="hljs-keyword">new</span> StringBuffer();<br>   sql.<span class="hljs-keyword">append</span>(<span class="hljs-string">"select count(c_id) from customer_resource where s_name like ? "</span>);<br>   <span class="hljs-keyword">if</span>(cLevel != <span class="hljs-number">0</span>)&#123;<br>    sql.<span class="hljs-keyword">append</span>(<span class="hljs-string">" and c_level = "</span>+cLevel);<br>   &#125;<br>   <span class="hljs-keyword">if</span>(cState != <span class="hljs-number">0</span>)&#123;<br>    sql.<span class="hljs-keyword">append</span>(<span class="hljs-string">" and c_state = "</span>+cState);<br>   &#125;<br>   pstate = <span class="hljs-keyword">this</span>.conn.prepareStatement(sql.toString());<br>   pstate.setString(<span class="hljs-number">1</span>, <span class="hljs-string">"%"</span>+sName+<span class="hljs-string">"%"</span>);<br>   res = pstate.executeQuery();<br>   <span class="hljs-keyword">while</span>(res.<span class="hljs-keyword">next</span>())&#123;<br>    <span class="hljs-keyword">count</span> = res.getInt(<span class="hljs-number">1</span>);<br>   &#125;<br>  &#125; <span class="hljs-keyword">catch</span> (Exception e) &#123;<br>   e.printStackTrace();<br>   <span class="hljs-comment">// <span class="hljs-doctag">TODO:</span> handle exception</span><br>  &#125; <span class="hljs-keyword">finally</span>&#123;<br>   <span class="hljs-keyword">try</span> &#123;<br>    res.close();<br>    pstate.close();<br>   &#125; <span class="hljs-keyword">catch</span> (Exception e2) &#123;<br>    e2.printStackTrace();<br>   &#125;<br>  &#125;<br>  <span class="hljs-keyword">return</span><br></code></pre></td></tr></table></figure><p>4.Pojo实体类（数据库里的字段）</p><figure class="highlight processing"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br><span class="line">94</span><br><span class="line">95</span><br><span class="line">96</span><br><span class="line">97</span><br><span class="line">98</span><br><span class="line">99</span><br><span class="line">100</span><br><span class="line">101</span><br><span class="line">102</span><br></pre></td><td class="code"><pre><code class="hljs undefined"><span class="hljs-keyword">package</span> com.wanczy.pojo;<br><br><span class="hljs-keyword">import</span> java.io.Serializable;<br><span class="hljs-keyword">import</span> java.math.BigDecimal;<br><br><span class="hljs-keyword">public</span> class CustomerResourcePOJO implements Serializable &#123;<br> <span class="hljs-keyword">private</span> BigDecimal cid;<br> <span class="hljs-keyword">private</span> <span class="hljs-keyword">String</span> sname;<br> <span class="hljs-keyword">private</span> <span class="hljs-keyword">String</span> sadd;<br> <span class="hljs-keyword">private</span> <span class="hljs-keyword">String</span> slinkMan;<br> <span class="hljs-keyword">private</span> <span class="hljs-keyword">String</span> slinkTel;<br> <span class="hljs-keyword">private</span> <span class="hljs-built_in">int</span> clevel;<br> <span class="hljs-keyword">private</span> <span class="hljs-built_in">int</span> cstate;<br> <span class="hljs-keyword">private</span> <span class="hljs-keyword">String</span> sleader;<br> <span class="hljs-keyword">private</span> <span class="hljs-keyword">String</span> sleaderTel;<br> <span class="hljs-keyword">public</span> BigDecimal getCid() &#123;<br>  <span class="hljs-keyword">return</span> cid;<br> &#125;<br> <span class="hljs-keyword">public</span> <span class="hljs-keyword">void</span> setCid(BigDecimal cid) &#123;<br>  <span class="hljs-keyword">this</span>.cid = cid;<br> &#125;<br> <span class="hljs-keyword">public</span> <span class="hljs-keyword">String</span> getSname() &#123;<br>  <span class="hljs-keyword">return</span> sname;<br> &#125;<br> <span class="hljs-keyword">public</span> <span class="hljs-keyword">void</span> setSname(<span class="hljs-keyword">String</span> sname) &#123;<br>  <span class="hljs-keyword">this</span>.sname = sname;<br> &#125;<br> <span class="hljs-keyword">public</span> <span class="hljs-keyword">String</span> getSadd() &#123;<br>  <span class="hljs-keyword">return</span> sadd;<br> &#125;<br> <span class="hljs-keyword">public</span> <span class="hljs-keyword">void</span> setSadd(<span class="hljs-keyword">String</span> sadd) &#123;<br>  <span class="hljs-keyword">this</span>.sadd = sadd;<br> &#125;<br> <span class="hljs-keyword">public</span> <span class="hljs-keyword">String</span> getSlinkMan() &#123;<br>  <span class="hljs-keyword">return</span> slinkMan;<br> &#125;<br> <span class="hljs-keyword">public</span> <span class="hljs-keyword">void</span> setSlinkMan(<span class="hljs-keyword">String</span> slinkMan) &#123;<br>  <span class="hljs-keyword">this</span>.slinkMan = slinkMan;<br> &#125;<br> <span class="hljs-keyword">public</span> <span class="hljs-keyword">String</span> getSlinkTel() &#123;<br>  <span class="hljs-keyword">return</span> slinkTel;<br> &#125;<br> <span class="hljs-keyword">public</span> <span class="hljs-keyword">void</span> setSlinkTel(<span class="hljs-keyword">String</span> slinkTel) &#123;<br>  <span class="hljs-keyword">this</span>.slinkTel = slinkTel;<br> &#125;<br> <span class="hljs-keyword">public</span> <span class="hljs-built_in">int</span> getClevel() &#123;<br>  <span class="hljs-keyword">return</span> clevel;<br> &#125;<br> <span class="hljs-keyword">public</span> <span class="hljs-keyword">void</span> setClevel(<span class="hljs-built_in">int</span> clevel) &#123;<br>  <span class="hljs-keyword">this</span>.clevel = clevel;<br> &#125;<br> <span class="hljs-keyword">public</span> <span class="hljs-built_in">int</span> getCstate() &#123;<br>  <span class="hljs-keyword">return</span> cstate;<br> &#125;<br> <span class="hljs-keyword">public</span> <span class="hljs-keyword">void</span> setCstate(<span class="hljs-built_in">int</span> cstate) &#123;<br>  <span class="hljs-keyword">this</span>.cstate = cstate;<br> &#125;<br> <span class="hljs-keyword">public</span> <span class="hljs-keyword">String</span> getSleader() &#123;<br>  <span class="hljs-keyword">return</span> sleader;<br> &#125;<br> <span class="hljs-keyword">public</span> <span class="hljs-keyword">void</span> setSleader(<span class="hljs-keyword">String</span> sleader) &#123;<br>  <span class="hljs-keyword">this</span>.sleader = sleader;<br> &#125;<br> <span class="hljs-keyword">public</span> <span class="hljs-keyword">String</span> getSleaderTel() &#123;<br>  <span class="hljs-keyword">return</span> sleaderTel;<br> &#125;<br> <span class="hljs-keyword">public</span> <span class="hljs-keyword">void</span> setSleaderTel(<span class="hljs-keyword">String</span> sleaderTel) &#123;<br>  <span class="hljs-keyword">this</span>.sleaderTel = sleaderTel;<br> &#125;<br> <span class="hljs-comment">//一般构造方法都要写一个带id和一个不带id的，还有一个无参的，方便后面的增删改查以及方法的调用</span><br> <span class="hljs-keyword">public</span> CustomerResourcePOJO(BigDecimal cid, <span class="hljs-keyword">String</span> sname, <span class="hljs-keyword">String</span> sadd,<br>   <span class="hljs-keyword">String</span> slinkMan, <span class="hljs-keyword">String</span> slinkTel, <span class="hljs-built_in">int</span> clevel, <span class="hljs-built_in">int</span> cstate,<br>   <span class="hljs-keyword">String</span> sleader, <span class="hljs-keyword">String</span> sleaderTel) &#123;<br>  <span class="hljs-keyword">super</span>();<br>  <span class="hljs-keyword">this</span>.cid = cid;<br>  <span class="hljs-keyword">this</span>.sname = sname;<br>  <span class="hljs-keyword">this</span>.sadd = sadd;<br>  <span class="hljs-keyword">this</span>.slinkMan = slinkMan;<br>  <span class="hljs-keyword">this</span>.slinkTel = slinkTel;<br>  <span class="hljs-keyword">this</span>.clevel = clevel;<br>  <span class="hljs-keyword">this</span>.cstate = cstate;<br>  <span class="hljs-keyword">this</span>.sleader = sleader;<br>  <span class="hljs-keyword">this</span>.sleaderTel = sleaderTel;<br> &#125;<br> <span class="hljs-keyword">public</span> CustomerResourcePOJO( <span class="hljs-keyword">String</span> sname, <span class="hljs-keyword">String</span> sadd,<br>   <span class="hljs-keyword">String</span> slinkMan, <span class="hljs-keyword">String</span> slinkTel, <span class="hljs-built_in">int</span> clevel, <span class="hljs-built_in">int</span> cstate,<br>   <span class="hljs-keyword">String</span> sleader, <span class="hljs-keyword">String</span> sleaderTel) &#123;<br>  <span class="hljs-keyword">super</span>();<br>  <span class="hljs-keyword">this</span>.sname = sname;<br>  <span class="hljs-keyword">this</span>.sadd = sadd;<br>  <span class="hljs-keyword">this</span>.slinkMan = slinkMan;<br>  <span class="hljs-keyword">this</span>.slinkTel = slinkTel;<br>  <span class="hljs-keyword">this</span>.clevel = clevel;<br>  <span class="hljs-keyword">this</span>.cstate = cstate;<br>  <span class="hljs-keyword">this</span>.sleader = sleader;<br>  <span class="hljs-keyword">this</span>.sleaderTel = sleaderTel;<br> &#125;<br> <span class="hljs-keyword">public</span> CustomerResourcePOJO() &#123;<br>  <span class="hljs-keyword">super</span>();<br> &#125; <br> <br>&#125;<br></code></pre></td></tr></table></figure><p>5.代理类以及工厂类 </p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br></pre></td><td class="code"><pre><code class="hljs undefined"><span class="hljs-keyword">package</span> com.wanczy.dao.proxy;<br><br><span class="hljs-keyword">import</span> java.math.BigDecimal;<br><span class="hljs-keyword">import</span> java.sql.Connection;<br><span class="hljs-keyword">import</span> java.util.List;<br><br><span class="hljs-keyword">import</span> com.wanczy.dao.CustomerResourceDAO;<br><span class="hljs-keyword">import</span> com.wanczy.dao.impl.CustomerResourceDAOImpl;<br><span class="hljs-keyword">import</span> com.wanczy.pojo.CustomerResourcePOJO;<br><span class="hljs-keyword">import</span> com.wanczy.pub.GetConnection;<br><br><span class="hljs-keyword">public</span> <span class="hljs-class"><span class="hljs-keyword">class</span> <span class="hljs-title">CustomerResourceDAOProxy</span> <span class="hljs-keyword">implements</span> <span class="hljs-title">CustomerResourceDAO</span> </span>&#123;<br> Connection conn = <span class="hljs-keyword">null</span>;<br> CustomerResourceDAOImpl impl = <span class="hljs-keyword">null</span>;<br> <span class="hljs-function"><span class="hljs-keyword">public</span> <span class="hljs-title">CustomerResourceDAOProxy</span><span class="hljs-params">()</span></span>&#123;<br>  <span class="hljs-keyword">try</span> &#123;<br>   <span class="hljs-keyword">this</span>.conn = GetConnection.getConn();<br>  &#125; <span class="hljs-keyword">catch</span> (Exception e) &#123;<br>   <span class="hljs-comment">// TODO Auto-generated catch block</span><br>   e.printStackTrace();<br>  &#125;<br>  <span class="hljs-keyword">this</span>.impl = <span class="hljs-keyword">new</span> CustomerResourceDAOImpl(<span class="hljs-keyword">this</span>.conn);<br> &#125;<br> <span class="hljs-function"><span class="hljs-keyword">public</span> <span class="hljs-keyword">boolean</span> <span class="hljs-title">doDel</span><span class="hljs-params">(BigDecimal cID)</span> </span>&#123;<br>  <span class="hljs-keyword">boolean</span> flag = <span class="hljs-keyword">this</span>.impl.doDel(cID);<br>  <span class="hljs-keyword">this</span>.close();<br>  <span class="hljs-keyword">return</span> flag;<br> &#125;<br><br> <span class="hljs-function"><span class="hljs-keyword">public</span> <span class="hljs-keyword">boolean</span> <span class="hljs-title">doIns</span><span class="hljs-params">(CustomerResourcePOJO pojo)</span> </span>&#123;<br>  <span class="hljs-keyword">boolean</span> flag = <span class="hljs-keyword">this</span>.impl.doIns(pojo);<br>  <span class="hljs-keyword">this</span>.close();<br>  <span class="hljs-keyword">return</span> flag;<br> &#125;<br><br> <span class="hljs-function"><span class="hljs-keyword">public</span> <span class="hljs-keyword">boolean</span> <span class="hljs-title">doUpd</span><span class="hljs-params">(CustomerResourcePOJO pojo)</span> </span>&#123;<br>  <span class="hljs-keyword">boolean</span> flag = <span class="hljs-keyword">this</span>.impl.doUpd(pojo);<br>  <span class="hljs-keyword">this</span>.close();<br>  <span class="hljs-keyword">return</span> flag;<br> &#125;<br><br> <span class="hljs-function"><span class="hljs-keyword">public</span> CustomerResourcePOJO <span class="hljs-title">findByCId</span><span class="hljs-params">(BigDecimal cID)</span> </span>&#123;<br>  CustomerResourcePOJO pojo = <span class="hljs-keyword">this</span>.impl.findByCId(cID);<br>  <span class="hljs-keyword">this</span>.close();<br>  <span class="hljs-keyword">return</span> pojo;<br> &#125;<br><br> <span class="hljs-function"><span class="hljs-keyword">public</span> List&lt;CustomerResourcePOJO&gt; <span class="hljs-title">findByNameLevelState</span><span class="hljs-params">(String sName,<br>   <span class="hljs-keyword">int</span> cLevel, <span class="hljs-keyword">int</span> cState, <span class="hljs-keyword">int</span> pageSize, <span class="hljs-keyword">int</span> pageCurrent)</span> </span>&#123;<br>  List&lt;CustomerResourcePOJO&gt; list = <span class="hljs-keyword">this</span>.impl.findByNameLevelState(sName, cLevel, cState, pageSize, pageCurrent);<br>  <span class="hljs-keyword">this</span>.close();<br>  <span class="hljs-keyword">return</span> list;<br> &#125;<br><br> <span class="hljs-function"><span class="hljs-keyword">public</span> <span class="hljs-keyword">int</span> <span class="hljs-title">findCountByNameLevelState</span><span class="hljs-params">(String sName, <span class="hljs-keyword">int</span> cLevel, <span class="hljs-keyword">int</span> cState)</span> </span>&#123;<br>  <span class="hljs-keyword">int</span> count = <span class="hljs-keyword">this</span>.impl.findCountByNameLevelState(sName, cLevel, cState);<br>  <span class="hljs-keyword">this</span>.close();<br>  <span class="hljs-keyword">return</span> count;<br> &#125;<br> <span class="hljs-function"><span class="hljs-keyword">public</span> <span class="hljs-keyword">void</span> <span class="hljs-title">close</span><span class="hljs-params">()</span></span>&#123;<br>  <span class="hljs-keyword">try</span> &#123;<br>   <span class="hljs-keyword">this</span>.conn.close();<br>  &#125; <span class="hljs-keyword">catch</span> (Exception e) &#123;<br>   e.printStackTrace();<br>  &#125;<br> &#125;<br>&#125;<br></code></pre></td></tr></table></figure><p>6.servlet</p><figure class="highlight gradle"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br></pre></td><td class="code"><pre><code class="hljs undefined"><span class="hljs-keyword">package</span> com.wanczy.servlet.customerResource;<br><br><span class="hljs-keyword">import</span> java.io.IOException;<br><span class="hljs-keyword">import</span> java.io.PrintWriter;<br><span class="hljs-keyword">import</span> java.util.List;<br><br><span class="hljs-keyword">import</span> javax.servlet.ServletException;<br><span class="hljs-keyword">import</span> javax.servlet.http.HttpServlet;<br><span class="hljs-keyword">import</span> javax.servlet.http.HttpServletRequest;<br><span class="hljs-keyword">import</span> javax.servlet.http.HttpServletResponse;<br><br><span class="hljs-keyword">import</span> com.wanczy.dao.factory.CustomerResourceDAOFactory;<br><span class="hljs-keyword">import</span> com.wanczy.pojo.CustomerResourcePOJO;<br><br><span class="hljs-keyword">public</span> <span class="hljs-keyword">class</span> CustomerResourceQuery <span class="hljs-keyword">extends</span> HttpServlet &#123;<br><br> <span class="hljs-keyword">public</span> <span class="hljs-keyword">void</span> doGet(HttpServletRequest request, HttpServletResponse response)<br>   <span class="hljs-keyword">throws</span> ServletException, IOException &#123;<br>  request.setCharacterEncoding(<span class="hljs-string">"utf-8"</span>);<br>  response.setCharacterEncoding(<span class="hljs-string">"utf-8"</span>);<br>  response.setContentType(<span class="hljs-string">"text/html; charset=utf-8"</span>);<br>  String sName = request.getParameter(<span class="hljs-string">"sName"</span>);<br>  <span class="hljs-keyword">int</span> cLevel = Integer.parseInt(request.getParameter(<span class="hljs-string">"cLevel"</span>));<br>  <span class="hljs-keyword">int</span> cState = Integer.parseInt(request.getParameter(<span class="hljs-string">"cState"</span>));<br>  <span class="hljs-keyword">int</span> pageSize = Integer.parseInt(request.getParameter(<span class="hljs-string">"pageSize"</span>));<br>  <span class="hljs-keyword">int</span> pageCurrent = Integer.parseInt(request.getParameter(<span class="hljs-string">"pageCurrent"</span>));<br>  List&lt;CustomerResourcePOJO&gt; list = CustomerResourceDAOFactory.getDAOInstance().findByNameLevelState(sName, cLevel, cState, pageSize, pageCurrent);<br>  <span class="hljs-keyword">int</span> <span class="hljs-keyword">count</span> = CustomerResourceDAOFactory.getDAOInstance().findCountByNameLevelState(sName, cLevel, cState);<br>  PrintWriter out = response.getWriter();<br>  StringBuffer sb = <span class="hljs-keyword">new</span> StringBuffer();<br>  sb.<span class="hljs-keyword">append</span>(<span class="hljs-string">"&lt;input type='hidden' id='count' value='"</span>+<span class="hljs-keyword">count</span>+<span class="hljs-string">"'/&gt;"</span>);<br>  sb.<span class="hljs-keyword">append</span>(<span class="hljs-string">"&lt;table id='sample_1' class='table table-striped table-bordered table-hover table-checkable order-column'&gt;&lt;tr&gt;&lt;th&gt;学校名称&lt;/th&gt;&lt;th&gt;学校地址&lt;/th&gt;&lt;th&gt;联系人&lt;/th&gt;&lt;th&gt;联系人电话&lt;/th&gt;&lt;th&gt;客户等级&lt;/th&gt;&lt;th&gt;合作状态&lt;/th&gt;&lt;th&gt;院校领导&lt;/th&gt;&lt;th&gt;领导电话&lt;/th&gt;&lt;th&gt;操作&lt;/th&gt;&lt;/tr&gt;"</span>);<br>  <span class="hljs-keyword">for</span>(CustomerResourcePOJO pojo : list)&#123;<br>   String cLevelCode = <span class="hljs-string">""</span>;<br>   <span class="hljs-keyword">if</span>(pojo.getClevel() == <span class="hljs-number">1</span>)&#123;<br>    cLevelCode = <span class="hljs-string">"高"</span>;<br>   &#125;<span class="hljs-keyword">else</span> <span class="hljs-keyword">if</span>(pojo.getClevel() == <span class="hljs-number">2</span>)&#123;<br>    cLevelCode = <span class="hljs-string">"中"</span>;<br>   &#125;<span class="hljs-keyword">else</span>&#123;<br>    cLevelCode = <span class="hljs-string">"低"</span>;<br>   &#125;<br>   String cStateCode = <span class="hljs-string">""</span>;<br>   <span class="hljs-keyword">if</span>(pojo.getCstate() == <span class="hljs-number">1</span>)&#123;<br>    cStateCode = <span class="hljs-string">"常年合作"</span>;<br>   &#125;<span class="hljs-keyword">else</span> <span class="hljs-keyword">if</span>(pojo.getCstate() == <span class="hljs-number">2</span>)&#123;<br>    cStateCode = <span class="hljs-string">"合作少"</span>;<br>   &#125;<span class="hljs-keyword">else</span>&#123;<br>    cStateCode = <span class="hljs-string">"近年无合作"</span>;<br>   &#125;<br>   sb.<span class="hljs-keyword">append</span>(<span class="hljs-string">"&lt;tr&gt;"</span> +<br>     <span class="hljs-string">"&lt;td&gt;"</span>+pojo.getSname()+<span class="hljs-string">"&lt;/td&gt;"</span> +<br>     <span class="hljs-string">"&lt;td&gt;"</span>+pojo.getSadd()+<span class="hljs-string">"&lt;/td&gt;"</span> +<br>     <span class="hljs-string">"&lt;td&gt;"</span>+pojo.getSlinkMan()+<span class="hljs-string">"&lt;/td&gt;"</span> +<br>     <span class="hljs-string">"&lt;td&gt;"</span>+pojo.getSlinkTel()+<span class="hljs-string">"&lt;/td&gt;"</span> +<br>     <span class="hljs-string">"&lt;td&gt;"</span>+cLevelCode+<span class="hljs-string">"&lt;/td&gt;"</span> +<br>     <span class="hljs-string">"&lt;td&gt;"</span>+cStateCode+<span class="hljs-string">"&lt;/td&gt;"</span> +<br>     <span class="hljs-string">"&lt;td&gt;"</span>+pojo.getSleader()+<span class="hljs-string">"&lt;/td&gt;"</span> +<br>     <span class="hljs-string">"&lt;td&gt;"</span>+pojo.getSleaderTel()+<span class="hljs-string">"&lt;/td&gt;"</span> +<br>     <span class="hljs-string">"&lt;td&gt;&lt;a href='#' onclick='goUpdate("</span>+pojo.getCid()+<span class="hljs-string">")'&gt;修改&lt;/a&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;"</span> +<br>       <span class="hljs-string">"&lt;a href='#' onclick='goDelete("</span>+pojo.getCid()+<span class="hljs-string">")'&gt;删除&lt;/a&gt;&lt;/td&gt;"</span> +<br>     <span class="hljs-string">"&lt;/tr&gt;"</span>);<br>  &#125;<br>  sb.<span class="hljs-keyword">append</span>(<span class="hljs-string">"&lt;/table&gt;"</span>);<br>  out.<span class="hljs-keyword">print</span>(sb.toString());<br>  out.close();<br>   <br> &#125;<br> <span class="hljs-keyword">public</span> <span class="hljs-keyword">void</span> doPost(HttpServletRequest request, HttpServletResponse response)<br>   <span class="hljs-keyword">throws</span> ServletException, IOException &#123;<br>  <span class="hljs-keyword">this</span>.doGet(request, response);<br> &#125;<br><br>&#125;<br></code></pre></td></tr></table></figure><p>7.web页面</p><figure class="highlight http"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br><span class="line">94</span><br><span class="line">95</span><br><span class="line">96</span><br><span class="line">97</span><br><span class="line">98</span><br><span class="line">99</span><br><span class="line">100</span><br><span class="line">101</span><br><span class="line">102</span><br><span class="line">103</span><br><span class="line">104</span><br><span class="line">105</span><br><span class="line">106</span><br><span class="line">107</span><br><span class="line">108</span><br><span class="line">109</span><br><span class="line">110</span><br><span class="line">111</span><br><span class="line">112</span><br><span class="line">113</span><br><span class="line">114</span><br><span class="line">115</span><br><span class="line">116</span><br><span class="line">117</span><br><span class="line">118</span><br><span class="line">119</span><br><span class="line">120</span><br><span class="line">121</span><br><span class="line">122</span><br><span class="line">123</span><br><span class="line">124</span><br><span class="line">125</span><br><span class="line">126</span><br><span class="line">127</span><br><span class="line">128</span><br><span class="line">129</span><br><span class="line">130</span><br><span class="line">131</span><br><span class="line">132</span><br><span class="line">133</span><br><span class="line">134</span><br></pre></td><td class="code"><pre><code class="hljs undefined"><br><br><span class="xml"><span class="hljs-tag">&lt;<span class="hljs-name">%@page</span> <span class="hljs-attr">contentType</span>=<span class="hljs-string">"text/html; charset=utf-8"</span>  %&gt;</span><br> <span class="hljs-tag">&lt;<span class="hljs-name">%</span> <span class="hljs-attr">String</span> <span class="hljs-attr">path</span>=<span class="hljs-string">request.getContextPath();</span> %&gt;</span><br> <span class="hljs-tag">&lt;<span class="hljs-name">html</span>&gt;</span><br> <span class="hljs-tag">&lt;<span class="hljs-name">head</span>&gt;</span><br> <span class="hljs-tag">&lt;<span class="hljs-name">title</span>&gt;</span>分页操作<span class="hljs-tag">&lt;/<span class="hljs-name">title</span>&gt;</span><br> <span class="hljs-tag">&lt;/<span class="hljs-name">head</span>&gt;</span><br> <span class="hljs-tag">&lt;<span class="hljs-name">body</span>&gt;</span><br> <span class="hljs-tag">&lt;<span class="hljs-name">form</span> <span class="hljs-attr">name</span> = <span class="hljs-string">"f"</span>&gt;</span><br>  <span class="hljs-tag">&lt;<span class="hljs-name">fieldset</span> <span class="hljs-attr">title</span>=<span class="hljs-string">"查询"</span>&gt;</span><br>   <span class="hljs-tag">&lt;<span class="hljs-name">legend</span>&gt;</span><br>    <span class="hljs-tag">&lt;<span class="hljs-name">span</span> <span class="hljs-attr">width</span>=<span class="hljs-string">"12%"</span> <span class="hljs-attr">height</span>=<span class="hljs-string">"25"</span> <span class="hljs-attr">class</span>=<span class="hljs-string">"STYLE1"</span><br>        <span class="hljs-attr">style</span>=<span class="hljs-string">"color: black;"</span>&gt;</span>查询条件<span class="hljs-tag">&lt;/<span class="hljs-name">span</span>&gt;</span><br>   <span class="hljs-tag">&lt;/<span class="hljs-name">legend</span>&gt;</span><br>  学校名称：<span class="hljs-tag">&lt;<span class="hljs-name">input</span> <span class="hljs-attr">type</span>=<span class="hljs-string">"text"</span> <span class="hljs-attr">name</span>=<span class="hljs-string">"sName"</span>/&gt;</span><br>   合作等级：<span class="hljs-tag">&lt;<span class="hljs-name">select</span> <span class="hljs-attr">name</span>=<span class="hljs-string">"cLevel"</span>&gt;</span><br>      <span class="hljs-tag">&lt;<span class="hljs-name">option</span> <span class="hljs-attr">value</span>=<span class="hljs-string">"0"</span> <span class="hljs-attr">selected</span>=<span class="hljs-string">"selected"</span>&gt;</span>全部<span class="hljs-tag">&lt;/<span class="hljs-name">option</span>&gt;</span><br>      <span class="hljs-tag">&lt;<span class="hljs-name">option</span> <span class="hljs-attr">value</span>=<span class="hljs-string">"1"</span>&gt;</span>高<span class="hljs-tag">&lt;/<span class="hljs-name">option</span>&gt;</span><br>      <span class="hljs-tag">&lt;<span class="hljs-name">option</span> <span class="hljs-attr">value</span>=<span class="hljs-string">"2"</span>&gt;</span>中<span class="hljs-tag">&lt;/<span class="hljs-name">option</span>&gt;</span><br>      <span class="hljs-tag">&lt;<span class="hljs-name">option</span> <span class="hljs-attr">value</span>=<span class="hljs-string">"3"</span>&gt;</span>低<span class="hljs-tag">&lt;/<span class="hljs-name">option</span>&gt;</span><br>     <span class="hljs-tag">&lt;/<span class="hljs-name">select</span>&gt;</span><br>   合作状态：<span class="hljs-tag">&lt;<span class="hljs-name">select</span> <span class="hljs-attr">name</span>=<span class="hljs-string">"cState"</span>&gt;</span><br>      <span class="hljs-tag">&lt;<span class="hljs-name">option</span> <span class="hljs-attr">value</span>=<span class="hljs-string">"0"</span> <span class="hljs-attr">selected</span>=<span class="hljs-string">"selected"</span>&gt;</span>全部<span class="hljs-tag">&lt;/<span class="hljs-name">option</span>&gt;</span><br>      <span class="hljs-tag">&lt;<span class="hljs-name">option</span> <span class="hljs-attr">value</span>=<span class="hljs-string">"1"</span>&gt;</span>常年合作<span class="hljs-tag">&lt;/<span class="hljs-name">option</span>&gt;</span><br>      <span class="hljs-tag">&lt;<span class="hljs-name">option</span> <span class="hljs-attr">value</span>=<span class="hljs-string">"2"</span>&gt;</span>合作少<span class="hljs-tag">&lt;/<span class="hljs-name">option</span>&gt;</span><br>      <span class="hljs-tag">&lt;<span class="hljs-name">option</span> <span class="hljs-attr">value</span>=<span class="hljs-string">"3"</span>&gt;</span>近年无合作<span class="hljs-tag">&lt;/<span class="hljs-name">option</span>&gt;</span><br>     <span class="hljs-tag">&lt;/<span class="hljs-name">select</span>&gt;</span><br>   <span class="hljs-tag">&lt;<span class="hljs-name">input</span> <span class="hljs-attr">type</span>=<span class="hljs-string">"button"</span> <span class="hljs-attr">value</span>=<span class="hljs-string">"查询"</span> <span class="hljs-attr">onclick</span>=<span class="hljs-string">"query(0)"</span>/&gt;</span><br>   <span class="hljs-tag">&lt;<span class="hljs-name">input</span> <span class="hljs-attr">type</span>=<span class="hljs-string">"button"</span> <span class="hljs-attr">value</span>=<span class="hljs-string">"新增"</span> <span class="hljs-attr">onclick</span>=<span class="hljs-string">"goAdd()"</span>/&gt;</span><br>  <span class="hljs-tag">&lt;/<span class="hljs-name">fieldset</span>&gt;</span><br>   <br>  <span class="hljs-tag">&lt;/<span class="hljs-name">form</span>&gt;</span><br>  <span class="hljs-tag">&lt;<span class="hljs-name">hr</span>/&gt;</span><br>  <span class="hljs-tag">&lt;<span class="hljs-name">div</span> <span class="hljs-attr">id</span>=<span class="hljs-string">"showTable"</span>&gt;</span><span class="hljs-tag">&lt;/<span class="hljs-name">div</span>&gt;</span><br>  <span class="hljs-tag">&lt;<span class="hljs-name">div</span> <span class="hljs-attr">align</span>=<span class="hljs-string">"right"</span>&gt;</span><br>   <span class="hljs-tag">&lt;<span class="hljs-name">input</span> <span class="hljs-attr">type</span>=<span class="hljs-string">"button"</span> <span class="hljs-attr">id</span>=<span class="hljs-string">"first"</span> <span class="hljs-attr">value</span>=<span class="hljs-string">"|&lt;"</span> <span class="hljs-attr">onclick</span>=<span class="hljs-string">"query(1)"</span>/&gt;</span><br>   <span class="hljs-tag">&lt;<span class="hljs-name">input</span> <span class="hljs-attr">type</span>=<span class="hljs-string">"button"</span> <span class="hljs-attr">id</span>=<span class="hljs-string">"up"</span> <span class="hljs-attr">value</span>=<span class="hljs-string">"&lt;"</span> <span class="hljs-attr">onclick</span>=<span class="hljs-string">"query(2)"</span>/&gt;</span><br>   <span class="hljs-tag">&lt;<span class="hljs-name">input</span> <span class="hljs-attr">type</span>=<span class="hljs-string">"button"</span> <span class="hljs-attr">id</span>=<span class="hljs-string">"next"</span> <span class="hljs-attr">value</span>=<span class="hljs-string">"&gt;"</span> <span class="hljs-attr">onclick</span>=<span class="hljs-string">"query(3)"</span>/&gt;</span><br>   <span class="hljs-tag">&lt;<span class="hljs-name">input</span> <span class="hljs-attr">type</span>=<span class="hljs-string">"button"</span> <span class="hljs-attr">id</span>=<span class="hljs-string">"end"</span> <span class="hljs-attr">value</span>=<span class="hljs-string">"&gt;|"</span> <span class="hljs-attr">onclick</span>=<span class="hljs-string">"query(4)"</span>/&gt;</span><br>   <span class="hljs-tag">&lt;<span class="hljs-name">select</span> <span class="hljs-attr">id</span>=<span class="hljs-string">"selectPageCurrent"</span> <span class="hljs-attr">onchange</span>=<span class="hljs-string">"query(5)"</span>&gt;</span><br>    <span class="hljs-tag">&lt;<span class="hljs-name">option</span> <span class="hljs-attr">value</span>=<span class="hljs-string">"3"</span> <span class="hljs-attr">selected</span>=<span class="hljs-string">"selected"</span>&gt;</span>显示3笔<span class="hljs-tag">&lt;/<span class="hljs-name">option</span>&gt;</span><br>    <span class="hljs-tag">&lt;<span class="hljs-name">option</span> <span class="hljs-attr">value</span>=<span class="hljs-string">"5"</span>&gt;</span>显示5笔<span class="hljs-tag">&lt;/<span class="hljs-name">option</span>&gt;</span><br>    <span class="hljs-tag">&lt;<span class="hljs-name">option</span> <span class="hljs-attr">value</span>=<span class="hljs-string">"10"</span>&gt;</span>显示10笔<span class="hljs-tag">&lt;/<span class="hljs-name">option</span>&gt;</span><br>   <span class="hljs-tag">&lt;/<span class="hljs-name">select</span>&gt;</span><br>   <span class="hljs-tag">&lt;<span class="hljs-name">span</span> <span class="hljs-attr">id</span>=<span class="hljs-string">"showPageMessage"</span>&gt;</span><span class="hljs-tag">&lt;/<span class="hljs-name">span</span>&gt;</span><br>  <span class="hljs-tag">&lt;/<span class="hljs-name">div</span>&gt;</span><br> <span class="hljs-tag">&lt;/<span class="hljs-name">body</span>&gt;</span><br> <span class="hljs-tag">&lt;<span class="hljs-name">script</span> <span class="hljs-attr">type</span>=<span class="hljs-string">"text/javascript"</span>&gt;</span><span class="javascript"><br>  <span class="hljs-keyword">var</span> pageSize = <span class="hljs-number">3</span>;<span class="hljs-comment">//一页显示的数据笔数</span><br>  <span class="hljs-keyword">var</span> pageCurrent = <span class="hljs-number">1</span>;<span class="hljs-comment">//显示的页数</span><br>  <span class="hljs-keyword">var</span> allCount = <span class="hljs-number">0</span>;<span class="hljs-comment">//总共的数据笔数</span><br>  <span class="hljs-keyword">var</span> allPage = <span class="hljs-number">0</span>;<span class="hljs-comment">//总共数据页数</span><br>  query(<span class="hljs-number">0</span>);<br>  <span class="hljs-function"><span class="hljs-keyword">function</span> <span class="hljs-title">query</span>(<span class="hljs-params">num</span>)</span>&#123;<br>   <span class="hljs-keyword">var</span> sName = f.sName.value;<br>   <span class="hljs-keyword">var</span> cLevel = f.cLevel.value;<br>   <span class="hljs-keyword">var</span> cState = f.cState.value;<br>   <span class="hljs-keyword">if</span>(num == <span class="hljs-number">1</span>)&#123;<br>    pageCurrent = <span class="hljs-number">1</span>;<br>   &#125;<span class="hljs-keyword">else</span> <span class="hljs-keyword">if</span>(num == <span class="hljs-number">2</span>)&#123;<br>    pageCurrent = pageCurrent <span class="hljs-number">-1</span>;<br>   &#125;<span class="hljs-keyword">else</span> <span class="hljs-keyword">if</span>(num == <span class="hljs-number">3</span>)&#123;<br>    pageCurrent = pageCurrent + <span class="hljs-number">1</span>;<br>   &#125;<span class="hljs-keyword">else</span> <span class="hljs-keyword">if</span>(num == <span class="hljs-number">4</span>)&#123;<br>    pageCurrent = allPage;<br>   &#125;<span class="hljs-keyword">else</span> <span class="hljs-keyword">if</span>(num == <span class="hljs-number">5</span>)&#123;<br>    pageCurrent = <span class="hljs-number">1</span>;<br>    pageSize = $(<span class="hljs-string">"#selectPageCurrent"</span>).val();<span class="hljs-comment">//取得每页显示的数据笔数</span><br>   &#125;<br>    $(<span class="hljs-built_in">document</span>).ready(<span class="hljs-function"><span class="hljs-keyword">function</span>(<span class="hljs-params"></span>)</span>&#123;<br>     <span class="hljs-comment">//设置提交的路径，和参数</span><br>    $.post(<span class="hljs-string">"&lt;%=path %&gt;/CustomerResourceQuery"</span>,&#123;<span class="hljs-string">"sName"</span>:sName,<span class="hljs-string">"cLevel"</span>:cLevel,<span class="hljs-string">"cState"</span>:cState,<span class="hljs-string">"pageSize"</span>:pageSize,<span class="hljs-string">"pageCurrent"</span>:pageCurrent&#125;,<br>    <span class="hljs-function"><span class="hljs-keyword">function</span>(<span class="hljs-params">data</span>)</span>&#123;<span class="hljs-comment">//Servlet执行完之后执行方法，data表示的servlet返回数据内容</span><br>      $(<span class="hljs-string">"#showTable"</span>).html(data);<span class="hljs-comment">//显示Servlet返回的内容</span><br>      controlButton();<br>     &#125;);<br>   &#125;);<br>  &#125;<br>  <span class="hljs-function"><span class="hljs-keyword">function</span> <span class="hljs-title">controlButton</span>(<span class="hljs-params"></span>)</span>&#123;<br>   allCount = $(<span class="hljs-string">"#count"</span>).val();<br>   <span class="hljs-keyword">if</span>(allCount%pageSize == <span class="hljs-number">0</span>)&#123;<br>    allPage = allCount/pageSize<br>   &#125;<span class="hljs-keyword">else</span>&#123;<br>    allPage = <span class="hljs-built_in">Math</span>.floor(allCount/pageSize) +<span class="hljs-number">1</span>;<br>   &#125;<br>   <span class="hljs-built_in">document</span>.getElementById(<span class="hljs-string">"first"</span>).disabled = <span class="hljs-literal">false</span>;<br>   <span class="hljs-built_in">document</span>.getElementById(<span class="hljs-string">"up"</span>).disabled = <span class="hljs-literal">false</span>;<br>   <span class="hljs-built_in">document</span>.getElementById(<span class="hljs-string">"next"</span>).disabled = <span class="hljs-literal">false</span>;<br>   <span class="hljs-built_in">document</span>.getElementById(<span class="hljs-string">"end"</span>).disabled = <span class="hljs-literal">false</span>;<br>   <span class="hljs-keyword">if</span>(allPage == <span class="hljs-number">1</span>)&#123;<br>    <span class="hljs-built_in">document</span>.getElementById(<span class="hljs-string">"first"</span>).disabled = <span class="hljs-literal">true</span>;<br>    <span class="hljs-built_in">document</span>.getElementById(<span class="hljs-string">"up"</span>).disabled = <span class="hljs-literal">true</span>;<br>    <span class="hljs-built_in">document</span>.getElementById(<span class="hljs-string">"next"</span>).disabled = <span class="hljs-literal">true</span>;<br>    <span class="hljs-built_in">document</span>.getElementById(<span class="hljs-string">"end"</span>).disabled = <span class="hljs-literal">true</span>;<br>   &#125;<span class="hljs-keyword">else</span> <span class="hljs-keyword">if</span>(pageCurrent == <span class="hljs-number">1</span>)&#123;<br>    <span class="hljs-built_in">document</span>.getElementById(<span class="hljs-string">"first"</span>).disabled = <span class="hljs-literal">true</span>;<br>    <span class="hljs-built_in">document</span>.getElementById(<span class="hljs-string">"up"</span>).disabled = <span class="hljs-literal">true</span>;<br>   &#125;<span class="hljs-keyword">else</span> <span class="hljs-keyword">if</span>(pageCurrent == allPage)&#123;<br>    <span class="hljs-built_in">document</span>.getElementById(<span class="hljs-string">"next"</span>).disabled = <span class="hljs-literal">true</span>;<br>    <span class="hljs-built_in">document</span>.getElementById(<span class="hljs-string">"end"</span>).disabled = <span class="hljs-literal">true</span>;<br>   &#125;<br>   $(<span class="hljs-string">"#showPageMessage"</span>).html(<span class="hljs-string">"总共"</span>+allCount+<span class="hljs-string">"笔数据，当前显示"</span>+pageCurrent+<span class="hljs-string">"页，共"</span>+ allPage+<span class="hljs-string">"页"</span>);<br>   <br>  &#125;<br>  <span class="hljs-function"><span class="hljs-keyword">function</span> <span class="hljs-title">goAdd</span>(<span class="hljs-params"></span>)</span>&#123;<br>   <span class="hljs-keyword">var</span> width = <span class="hljs-built_in">window</span>.screen.width ;<br>   <span class="hljs-keyword">var</span> height = <span class="hljs-built_in">window</span>.screen.height ;<br>   <span class="hljs-built_in">window</span>.open(<span class="hljs-string">"add.jsp"</span>,<span class="hljs-string">"新增客户"</span>,<span class="hljs-string">'height=400,width=300,top='</span>+(height<span class="hljs-number">-450</span>)/<span class="hljs-number">2</span>+<span class="hljs-string">',left='</span>+(width<span class="hljs-number">-300</span>)/<span class="hljs-number">2</span>+<span class="hljs-string">',toolbar=no,menubar=no,scrollbars=no, resizable=no,location=no, status=no'</span>);<br>  &#125;<br>  <span class="hljs-function"><span class="hljs-keyword">function</span> <span class="hljs-title">goUpdate</span>(<span class="hljs-params">cID</span>)</span>&#123;<br>   <span class="hljs-keyword">var</span> width = <span class="hljs-built_in">window</span>.screen.width ;<br>   <span class="hljs-keyword">var</span> height = <span class="hljs-built_in">window</span>.screen.height ;<br>   <span class="hljs-built_in">window</span>.open(<span class="hljs-string">"&lt;%=path%&gt;/CustomerResourceFindByCID?cID="</span>+cID,<span class="hljs-string">"修改客户"</span>,<span class="hljs-string">'height=400,width=300,top='</span>+(height<span class="hljs-number">-450</span>)/<span class="hljs-number">2</span>+<span class="hljs-string">',left='</span>+(width<span class="hljs-number">-300</span>)/<span class="hljs-number">2</span>+<span class="hljs-string">',toolbar=no,menubar=no,scrollbars=no, resizable=no,location=no, status=no'</span>);<br>  &#125;<br>  <span class="hljs-function"><span class="hljs-keyword">function</span> <span class="hljs-title">goDelete</span>(<span class="hljs-params">cID</span>)</span>&#123;<br>   <span class="hljs-keyword">if</span>(confirm(<span class="hljs-string">"确认删除？"</span>))&#123;<br>     $(<span class="hljs-built_in">document</span>).ready(<span class="hljs-function"><span class="hljs-keyword">function</span>(<span class="hljs-params"></span>)</span>&#123;<br>     <span class="hljs-comment">//设置提交的路径，和参数</span><br>    $.post(<span class="hljs-string">"&lt;%=path %&gt;/CustomerResourceDel"</span>,&#123;<span class="hljs-string">"cId"</span>:cID&#125;,<br>    <span class="hljs-function"><span class="hljs-keyword">function</span>(<span class="hljs-params">data</span>)</span>&#123;<span class="hljs-comment">//Servlet执行完之后执行方法，data表示的servlet返回数据内容</span><br>      <span class="hljs-keyword">if</span>(data == <span class="hljs-string">"true"</span>)&#123;<br>       alert(<span class="hljs-string">"删除成功"</span>);<br>       query(<span class="hljs-number">0</span>);<br>      &#125;<span class="hljs-keyword">else</span>&#123;<br>       alert(<span class="hljs-string">"删除失败，请联系系统管理员"</span>);<br>      &#125;<br>     &#125;);<br>   &#125;);<br>   &#125;<br>  &#125;<br> </span><span class="hljs-tag">&lt;/<span class="hljs-name">script</span>&gt;</span><br> <span class="hljs-tag">&lt;/<span class="hljs-name">body</span>&gt;</span><br> <span class="hljs-tag">&lt;/<span class="hljs-name">html</span>&gt;</span></span><br></code></pre></td></tr></table></figure><p>(本人亲测可以）</p><p>8.页面实现效果展示</p><p><img src="/2018/09/12/jsp/1143999-20170503171333414-1740405183.png" alt=""></p><p>　　总结一下吧，mvc+dao设计模式的好处就是实现了java面向对象的思想，接口和方法的实现分开，便于后期的开发和维护，以及功能的增加，通过接口实现类去实现接口中的方法，通过代理类去取得数据库连接池文件及调用方法，有问题可以留言。</p>]]></content>
    
    <summary type="html">
    
      
      
        &lt;p&gt;1.DAO+MVC包&lt;/p&gt;
&lt;p&gt;&lt;img src=&quot;/2018/09/12/jsp/1143999-20170503164702164-1976520947.png&quot; alt=&quot;&quot;&gt;&lt;/p&gt;
&lt;p&gt;&lt;img src=&quot;/2018/09/12/jsp/1143999-20
      
    
    </summary>
    
      <category term="原生分页查询" scheme="http://yoursite.com/categories/%E5%8E%9F%E7%94%9F%E5%88%86%E9%A1%B5%E6%9F%A5%E8%AF%A2/"/>
    
    
      <category term="jsp" scheme="http://yoursite.com/tags/jsp/"/>
    
      <category term="servlet" scheme="http://yoursite.com/tags/servlet/"/>
    
  </entry>
  
  <entry>
    <title>在服务器的tomcat上部署多个项目</title>
    <link href="http://yoursite.com/2018/09/12/tomcat/"/>
    <id>http://yoursite.com/2018/09/12/tomcat/</id>
    <published>2018-09-12T02:33:00.000Z</published>
    <updated>2018-09-12T11:59:35.663Z</updated>
    
    <content type="html"><![CDATA[<p><img src="http://chuantu.biz/t6/338/1530634640x-1404817868.jpg" alt="image"><br><a id="more"></a><br>第一步，找到服务器上tomcat的配置文件conf/server.xml文件。<br><img src="/2018/09/12/tomcat/20180907162227878.png" alt="这里写图片描述"><br>类似于我上面的这个文件，找到server.xml里面的<service name="Catalina">  </service>标签，在 标签后面加入如下配置</p><figure class="highlight django"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br></pre></td><td class="code"><pre><code class="hljs undefined"><span class="xml"><span class="hljs-tag">&lt;<span class="hljs-name">Service</span> <span class="hljs-attr">name</span>=<span class="hljs-string">"Catalina2"</span>&gt;</span>  <br> <br>  <span class="hljs-comment">&lt;!-- service的名字要对应 --&gt;</span><br>  <span class="hljs-tag">&lt;<span class="hljs-name">Connector</span> <span class="hljs-attr">port</span>=<span class="hljs-string">"8099"</span> <span class="hljs-attr">protocol</span>=<span class="hljs-string">"HTTP/1.1"</span><br> &lt;!<span class="hljs-attr">--</span>端口号与上面一个<span class="hljs-attr">Service</span>的端口号不一样<span class="hljs-attr">--</span>&gt;</span><br>               connectionTimeout="20000"<br> <br>               redirectPort="8443" URIEncoding="UTF-8"/&gt;<br> <br> <br> <br>   <span class="hljs-tag">&lt;<span class="hljs-name">Engine</span> <span class="hljs-attr">name</span>=<span class="hljs-string">"Catalina2"</span> <span class="hljs-attr">defaultHost</span>=<span class="hljs-string">"localhost"</span>&gt;</span>  <br> <br><span class="hljs-comment">&lt;!-- service的名字  --&gt;</span><br> <br>     <span class="hljs-tag">&lt;<span class="hljs-name">Realm</span> <span class="hljs-attr">className</span>=<span class="hljs-string">"org.apache.catalina.realm.UserDatabaseRealm"</span>  <br> <br>            <span class="hljs-attr">resourceName</span>=<span class="hljs-string">"UserDatabase"</span>/&gt;</span>  <br> <br>  <br> <br>     <span class="hljs-tag">&lt;<span class="hljs-name">Host</span> <span class="hljs-attr">name</span>=<span class="hljs-string">"localhost"</span>  <span class="hljs-attr">appBase</span>=<span class="hljs-string">"webapps2"</span>  <br> <br>           <span class="hljs-attr">unpackWARs</span>=<span class="hljs-string">"true"</span> <span class="hljs-attr">autoDeploy</span>=<span class="hljs-string">"true"</span>  <br> <br>           <span class="hljs-attr">xmlValidation</span>=<span class="hljs-string">"false"</span> <span class="hljs-attr">xmlNamespaceAware</span>=<span class="hljs-string">"false"</span>&gt;</span>  <br>   <span class="hljs-tag">&lt;<span class="hljs-name">Context</span> <span class="hljs-attr">path</span>=<span class="hljs-string">""</span> <span class="hljs-attr">docBase</span>=<span class="hljs-string">"D:\devsoft\apache-tomcat-8.0.35\webapps2\xiaolumouth"</span> <span class="hljs-attr">reloadable</span>=<span class="hljs-string">"true"</span> <span class="hljs-attr">workDir</span>=<span class="hljs-string">"D:/temp/Tomcat/test"</span> <span class="hljs-attr">debug</span>=<span class="hljs-string">"0"</span>/&gt;</span><br>   <span class="hljs-tag">&lt;/<span class="hljs-name">Host</span>&gt;</span>  <br> <span class="hljs-comment">&lt;!-- docBase 是第二个项目的路径--&gt;</span><br>   <span class="hljs-tag">&lt;/<span class="hljs-name">Engine</span>&gt;</span>  <br> <br> <span class="hljs-tag">&lt;/<span class="hljs-name">Service</span>&gt;</span></span><br></code></pre></td></tr></table></figure><p>第二步，复制webapps目录，复制后改变文件名例如webapps2<br><img src="/2018/09/12/tomcat/20180907162509143.png" alt="这里写图片描述"></p><p>把另外一个你要跑的项目放在目录webapps2下，在servicexml里面吧docBase属性引向该目录，是你自己的tomcat里面webapps2里面项目的路径就可以了。</p>]]></content>
    
    <summary type="html">
    
      &lt;p&gt;&lt;img src=&quot;http://chuantu.biz/t6/338/1530634640x-1404817868.jpg&quot; alt=&quot;image&quot;&gt;&lt;br&gt;&lt;/p&gt;
    
    </summary>
    
      <category term="服务器" scheme="http://yoursite.com/categories/%E6%9C%8D%E5%8A%A1%E5%99%A8/"/>
    
    
      <category term="tomcat" scheme="http://yoursite.com/tags/tomcat/"/>
    
  </entry>
  
  <entry>
    <title>docker安装和使用</title>
    <link href="http://yoursite.com/2018/07/06/docker/"/>
    <id>http://yoursite.com/2018/07/06/docker/</id>
    <published>2018-07-05T16:55:38.392Z</published>
    <updated>2018-07-05T16:56:17.089Z</updated>
    
    <content type="html"><![CDATA[<p><img src="http://chuantu.biz/t6/338/1530634640x-1404817868.jpg" alt="image"><br><a id="more"></a></p><h1 id="docker是什么"><a href="#docker是什么" class="headerlink" title="docker是什么"></a>docker是什么</h1><p>Docker：是一个开源的引擎，可以轻松的为任何应用创建一个轻量级的，可移植的，自给自足的容器。</p><p>Docker的核心概念：镜像、仓库、容器</p><p>Docker镜像：是一个特殊的文件系统，提供容器运行时所需的程序、库、资源、配置等文件外，还包含了一些为运行时准备的一些配置参数（如匿名卷、环境变量、用户等）。</p><p>Docker 容器（Container）：来运行应用。容器是从镜像创建的运行实例。它可以被启动、开始、停止、删除。每个容器都是相互隔离的、保证安全的平台。</p><p>仓库（Repository）：是集中存放镜像文件的场所</p><h2 id="一次完整docker的操作流程"><a href="#一次完整docker的操作流程" class="headerlink" title="一次完整docker的操作流程"></a>一次完整docker的操作流程</h2><p>一般的流程中,client发pull命令从仓库把image拉到docker host，然后通过run命令指挥image到host上面弄一个container来跑这个image。<br>当然也可以是相反的流程，client 通过build命令在host上面创建一个自己的image，然后通过push命令把image推到仓库。之后这个image可以被别的人或者自己pull。<br>DOCKER在windows上的安装<br>检查电脑环境<br>检查版本，为了运行docker，你的机器必须是windows7或以上的64bit系统。</p><p><img src="http://chuantu.biz/t6/338/1530633564x-1404817862.png" alt="image"></p><p>另外，你的机器必须支持硬件虚拟化技术(Hardware Virtualization Technology)并且已被启用。对于windows10系统来说，你可以在 任务管理器-&gt;性能 中查看到你的电脑是否开启了虚拟化</p><p><img src="http://chuantu.biz/t6/338/1530633646x-1404817862.png" alt="image"></p><p><img src="http://chuantu.biz/t6/338/1530633700x-1404817862.png" alt="image"></p><p>怎么开启虚拟化，因为电脑型号不一样，所以每台电脑进入BOIS的方式不一样，重启电脑，我的电脑是Lenovo的ThinkPad，所以我按的是F1，进入BOIS页面，找到Security，把Security下面的Virtualization里面的Intel(R) Virtualization Technology的状态改为Enable</p><p><img src="http://chuantu.biz/t6/338/1530634252x-1404817868.png" alt="image"></p><p>然后再重启就好了。</p><p>下载dockerToolbox<br><a href="https://get.daocloud.io/toolbox/,下载新版本" target="_blank" rel="noopener">https://get.daocloud.io/toolbox/,下载新版本</a></p><p>全部next就可以了</p><p>安装完成</p><p> <img src="http://chuantu.biz/t6/338/1530634299x-1404817862.png" alt="image"></p><p>安转成功之后桌面会多三个图标</p><p> <img src="http://chuantu.biz/t6/338/1530634403x-1404817862.png" alt="image"></p><p>如果安装完成之后桌面少了一个Oracle VM VirtualBox 的话，找到你的dockertoolbox<br>安装目录下面的installers下面的virtualbox，双击virtualbox.msi进行安装。</p><p>双击Docker Quickstart Terminal图标，启动一个终端，第一次运行会比较就，一般会报下载对应的镜像iso到对C：下的docker路径的错误，把dockertoolbox下的boot2docker.iso复制放到你docker运行下载镜像的位置，再重新启动就可以了。</p><p>启动成功会出现这样的界面</p><p> <img src="http://chuantu.biz/t6/338/1530634503x-1404817862.png" alt="image"></p><h1 id="docker在linux上的安装"><a href="#docker在linux上的安装" class="headerlink" title="docker在linux上的安装"></a>docker在linux上的安装</h1><p>1.安装docker<br>yum install docker.x86_64 </p><ol start="2"><li>启动Docker<br>service docker start<h1 id="linux常用命令"><a href="#linux常用命令" class="headerlink" title="linux常用命令"></a>linux常用命令</h1>　<figure class="highlight stata"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br></pre></td><td class="code"><pre><code class="hljs undefined"><span class="hljs-keyword">ls</span> 　 -a(同时列出隐含文件),　　-<span class="hljs-keyword">l</span>（输出一个比较完整的格式，除每个文件名外，增加显示文件<br><br>　　　　　类型、权限、硬链接数、所有者名、组名、大小（byte）、及时间信息-----简化为 ll）<br><br>　　<span class="hljs-keyword">mkdir</span> 　　 新建目录　例：<span class="hljs-keyword">mkdir</span> <span class="hljs-keyword">test</span> 命令会在当前目录下建立一个名为“<span class="hljs-keyword">test</span>”的新目录　　 <br><br>　　touch 　　创建文件    例：touch <span class="hljs-keyword">test</span>/readme.txt 在 <span class="hljs-keyword">test</span> 目录下创建 readme.txt文件<br><br>　　<span class="hljs-keyword">cd</span> 　　切换目录  <span class="hljs-keyword">cd</span> /.  到根目录    <span class="hljs-keyword">cd</span> .. 上一级目录   <span class="hljs-keyword">cd</span> /hahaha/hahaha  到指定目录<br><br>　　<span class="hljs-keyword">pwd</span> 　　显示当前目录<br><br>　　mv 　　移动/重命名（加上 -i 参数询问是否覆盖）  　mv hello rock/ 移动到rock目录下   <br><br>　　　　　　 mv hello rock 重命名为rock<br><br>　　cp 　　拷贝 （加上 -i 参数询问是否覆盖，-r 参数递归调用） 　<br><br>　　　　    cp -<span class="hljs-keyword">ir</span> <span class="hljs-keyword">test</span>/  workspace＂（递归复制 <span class="hljs-keyword">test</span> 目录到 workpace 目录下并在覆盖时提示）<br><br>　　<span class="hljs-keyword">rm</span> 　　删除 （加上 -i 参数确认提示，-r 参数递归调用）　　<br><br>　　　　　 <span class="hljs-keyword">rm</span> -<span class="hljs-keyword">ir</span> <span class="hljs-keyword">test</span>/  递归删除<span class="hljs-keyword">test</span>目录及其子目录并询问<br><br>　　wget url　　下载文件到当前目录<br><br>　　sudo  暂时获取超级用户权限（有默认时长）加上 -i 参数 没有时间限制,输入 <span class="hljs-keyword">exit</span>或logout 退出<br><br>　　<span class="hljs-keyword">su</span>  账户名  　　切换到某某用户模式，没有时间限制<br><br>　　<span class="hljs-keyword">ZIP</span> 工具：<br><br>　　　　压缩文件　　<span class="hljs-keyword">zip</span> target.<span class="hljs-keyword">zip</span> filename<br><br>　　　　压缩文件夹　　<span class="hljs-keyword">zip</span> -r target.<span class="hljs-keyword">zip</span> <span class="hljs-keyword">dir</span>　　 -r 参数表示递归压缩子目录<br><br>　　　　解压　　unzip target.<span class="hljs-keyword">zip</span><br><br>　　tar 工具：<br><br>　　　　-c: 建立压缩档案<br><br>　　　　-x：解压<br>　　　　-t：查看内容<br>　　　　-r：向压缩归档文件末尾追加文件<br>　　　　-<span class="hljs-keyword">u</span>：更新原压缩包中的文件<br><br>　　　　这五个是独立的命令，压缩解压都要用到其中一个，可以和别的命令连用但只能用<br><br>　　　　其中一个。下面的参数是根据需要在压缩或解压档案时可选的。<br>　　　　-z：有gzip属性的<br>　　　　-j：有bz2属性的<br>　　　　-Z：有<span class="hljs-keyword">compress</span>属性的<br>　　　　-v：显示所有过程<br>　　　　-O：将文件解开到标准输出<br><br>　　　　下面的参数-f是必须的<br><br>　　　　-f: 使用档案名字，切记，这个参数是最后一个参数，后面只能接档案名<br><br>　　　　例：tar -xvf <span class="hljs-keyword">file</span>.tar <span class="hljs-comment">//解压 tar包</span><br><br>　　　　　　tar -xzvf jdk-8u131-linux-x64.tar.gz -C /usr/<span class="hljs-keyword">local</span>/java <span class="hljs-comment">//解压jdk到指定文件夹　　</span><br><br>　　　　　　tar -cZf  jpg.tar.Z  *.jpg  <span class="hljs-comment">//将目录里所有jpg文件打包成jpg.tar后，并且将其用</span><br><br>　　　　　　　　<span class="hljs-keyword">compress</span>压缩，生成一个umcompress压缩过的包，命名为jpg.tar.Z<br><br>　　vim 编辑器：　　vim <span class="hljs-keyword">test</span>.cpp<br><br>　　　　vim 有两种模式，一种是普通模式，另一种是插入模式。执行上述命令以后进入普通模式。<br><br>　　　　按下字母键“i”进入插入模式，使用方向键移动光标到需要插入的位置，然后输入想要插入<br><br>　　　　的内容。编辑完成后按键“Esc”退出回到普通模式,在普通模式下输入冒号“:”，然后输入<br><br>　　　　w 回车，保存更改。接着输入“:q”退出。也可以直接输入“:wq”保存并退出（注意 w 一定要<br><br>　　　　在 q之前，先保存再退出）。<br><br>　　　　查找：在普通模式下输入“/查找内容”，回车，即可定位到第一个匹配项。接着按下字母<br><br>　　　　　　　键“<span class="hljs-keyword">n</span>”可以查找下一个。<br><br>　　　　撤销：普通模式下输入“:<span class="hljs-keyword">u</span>”并回车，实现撤销<br></code></pre></td></tr></table></figure></li></ol><h1 id="docker常用命令"><a href="#docker常用命令" class="headerlink" title="docker常用命令"></a>docker常用命令</h1><figure class="highlight stylus"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><code class="hljs undefined">docker search(-s) nginx  搜索相关镜像　<br>加上-s 参数 选出至少start数范围的镜像<br>docker push <span class="hljs-number">192.168</span>.<span class="hljs-number">0.100</span>:<span class="hljs-number">5000</span>/ubuntu 　　   推送镜像库到私有源<br>docker rmi（-f） 镜像名：版本号/镜像ID 删除镜像 （加上 -f 参数 强制删除）<br>docker rmi $(docker images -q)　　删除所有镜像<br>docker save docker.io/tomcat:<span class="hljs-number">7.0</span>.<span class="hljs-number">77</span>-jre7 &gt;/root/mytomcat7<span class="hljs-selector-class">.tar</span><span class="hljs-selector-class">.gz</span> 导出镜像<br>docker load &lt; /root/mytomcat7<span class="hljs-selector-class">.tar</span><span class="hljs-selector-class">.gz</span>　　导入镜像<br>如果你想要去查看一个镜像的运行效果，你需要先下载一个镜像，直接运行命令docker pull 镜像名<br></code></pre></td></tr></table></figure><p>　<br><figure class="highlight sqf"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br></pre></td><td class="code"><pre><code class="hljs undefined">docker ps 查看当前正在运行的容器<br><br>　docker inspect <span class="hljs-built_in">name</span>/<span class="hljs-built_in">image</span>[<span class="hljs-built_in">name</span>/<span class="hljs-built_in">image</span>...] 查看详细<br><br>　docker ps -a 查看所有容器的状态<br><br>　docker start/<span class="hljs-built_in">stop</span>(-t) id/<span class="hljs-built_in">name</span>[<span class="hljs-built_in">name</span>...] 启动/停止某个（多个）容器 -t 指定时间<br><br>　docker kill (-s) <span class="hljs-built_in">name</span>[<span class="hljs-built_in">name</span>...] 强制中断 -s指定SIGINT信号类型，默认“kill”<br><br>　docker restart (-t) <span class="hljs-built_in">name</span>[<span class="hljs-built_in">name</span>...]  重启 -t 指定时间<br><br>　　　　docker pause <span class="hljs-built_in">name</span>　暂停　　docker unpause <span class="hljs-built_in">name</span> 继续<br><br>　　　　docker rm(-$) <span class="hljs-built_in">name</span>[<span class="hljs-built_in">name</span>...] 移除 <br><br>　　　　　　-f　　--force=<span class="hljs-literal">false</span>　　强制移除运行中容器<br><br>　　　　　　-l　　--link=<span class="hljs-literal">false</span>　　   移除指定链接，保留底层容器<br><br>　　　　　　-v　  --volumes=<span class="hljs-literal">false</span>   移除容器关联卷<br></code></pre></td></tr></table></figure></p><h2 id="指令指南"><a href="#指令指南" class="headerlink" title="指令指南"></a>指令指南</h2><figure class="highlight coq"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><code class="hljs undefined">容器生命周期管理 — docker [run|<span class="hljs-type">start</span>|<span class="hljs-type">stop</span>|<span class="hljs-type">restart</span>|<span class="hljs-type">kill</span>|<span class="hljs-type">rm</span>|<span class="hljs-type">pause</span>|<span class="hljs-type">unpause</span>]<br>容器操作运维 — docker [ps|<span class="hljs-type">inspect</span>|<span class="hljs-type">top</span>|<span class="hljs-type">attach</span>|<span class="hljs-type">events</span>|<span class="hljs-type">logs</span>|<span class="hljs-type">wait</span>|<span class="hljs-type">export</span>|<span class="hljs-type">port</span>]<br>镜像仓库 — docker [login|<span class="hljs-type">pull</span>|<span class="hljs-type">push</span>|<span class="hljs-type">search</span>]<br>本地镜像管理 — docker [images|<span class="hljs-type">rmi</span>|<span class="hljs-type">tag</span>|<span class="hljs-type">build</span>|<span class="hljs-type">history</span>|<span class="hljs-type">save</span>|<span class="hljs-type">import</span>]<br>其他命令 — docker [info|<span class="hljs-type">version</span>]<br></code></pre></td></tr></table></figure><h1 id="使用dockerfile制作镜像"><a href="#使用dockerfile制作镜像" class="headerlink" title="使用dockerfile制作镜像"></a>使用dockerfile制作镜像</h1><p>Docker与微服务-使用Maven插件构建Docker镜像（可以参照<a href="http://blog.csdn.net/qq_22841811/article/details/67369530）" target="_blank" rel="noopener">http://blog.csdn.net/qq_22841811/article/details/67369530）</a></p><p>打开我们的项目，在我们项目的src/main下面新建一个docker文件，在docker文件里面新建Dockerfile文本</p><p>FROM java:8  #From是from那个镜像，最好现在docker里面pull下来，不然构建的时候会在再下一遍</p><p>VOLUME /tmp                           #指定挂载点，该指令使容器中的一个目录具有持久化存储的功能，该目录可被容器本身使用，也可以共享给其他容器</p><figure class="highlight dockerfile"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><code class="hljs undefined"><span class="hljs-keyword">ADD</span><span class="bash"> microservice-discovery-eureka-0.0.1-SNAPSHOT.jar app.jar  <span class="hljs-comment">#复制文件</span><br></span><br><span class="hljs-keyword">RUN</span><span class="bash"> bash -c <span class="hljs-string">'touch /app.jar'</span>      <span class="hljs-comment">#run是启动容器后执行的命令</span><br></span><br><span class="hljs-keyword">EXPOSE</span> <span class="hljs-number">9000</span>                           <span class="hljs-comment">#声明暴露的端口</span><br><br><span class="hljs-keyword">ENTRYPOINT</span><span class="bash"> [<span class="hljs-string">"java"</span>,<span class="hljs-string">"-Djava.security.egd=file:/dev/./urandom"</span>,<span class="hljs-string">"-jar"</span>,<span class="hljs-string">"/app.jar"</span>]</span><br></code></pre></td></tr></table></figure><h2 id="Dockerfile文件"><a href="#Dockerfile文件" class="headerlink" title="Dockerfile文件"></a>Dockerfile文件</h2><p>修改pom.xml</p><figure class="highlight dockerfile"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><code class="hljs undefined"><span class="hljs-keyword">FROM</span> Jjava:<span class="hljs-number">8</span> //来自那个基础镜像<br><span class="hljs-keyword">VOLUME</span><span class="bash"> /tmp //指定临时挂载点<br></span><span class="hljs-keyword">ADD</span><span class="bash"> microservice-discovery-eur.jar app.jar //把项目jar添加到app.jar里<br></span><span class="hljs-keyword">RUN</span><span class="bash"> bash -c <span class="hljs-string">'touch/app.jar'</span> //镜像运行后执行该命令<br></span><span class="hljs-keyword">EXPOSE</span>:<span class="hljs-number">9000</span> //暴露出来访问的端口<br><span class="hljs-keyword">ENTRYPOINT</span><span class="bash"> [<span class="hljs-string">"java"</span>,<span class="hljs-string">"-Djava.security.egd=file:/dev/./urandom"</span>,<span class="hljs-string">"-jar"</span>,<span class="hljs-string">"/app.jar"</span>] //运行后执行的命令<br></span>在maven的配置文件里面增加配置<br></code></pre></td></tr></table></figure><figure class="highlight dust"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br></pre></td><td class="code"><pre><code class="hljs undefined"><span class="xml"><span class="hljs-tag">&lt;<span class="hljs-name">build</span>&gt;</span><br><br>        <span class="hljs-tag">&lt;<span class="hljs-name">plugins</span>&gt;</span><br><br>            <span class="hljs-comment">&lt;!-- docker的maven插件，官网：https://github.com/spotify/docker-maven-plugin --&gt;</span><br><br>            <span class="hljs-tag">&lt;<span class="hljs-name">plugin</span>&gt;</span><br><br>                <span class="hljs-tag">&lt;<span class="hljs-name">groupId</span>&gt;</span>com.spotify<span class="hljs-tag">&lt;/<span class="hljs-name">groupId</span>&gt;</span><br><br>                <span class="hljs-tag">&lt;<span class="hljs-name">artifactId</span>&gt;</span>docker-maven-plugin<span class="hljs-tag">&lt;/<span class="hljs-name">artifactId</span>&gt;</span><br><br>                <span class="hljs-tag">&lt;<span class="hljs-name">version</span>&gt;</span>0.4.12<span class="hljs-tag">&lt;/<span class="hljs-name">version</span>&gt;</span><br><br>                <span class="hljs-tag">&lt;<span class="hljs-name">configuration</span>&gt;</span><br><br>                    <span class="hljs-comment">&lt;!-- 注意imageName一定要是符合正则[a-z0-9-_.]的，否则构建不会成功 --&gt;</span><br><br>                    <span class="hljs-comment">&lt;!-- 详见：https://github.com/spotify/docker-maven-plugin Invalid repository<br><br>                        name ... only [a-z0-9-_.] are allowed --&gt;</span><br><br>                    <span class="hljs-comment">&lt;!-- 如果要将docker镜像push到DockerHub上去的话，这边的路径要和repo路径一致 --&gt;</span><br><br>                    <span class="hljs-tag">&lt;<span class="hljs-name">imageName</span>&gt;</span>eacdy/test<span class="hljs-tag">&lt;/<span class="hljs-name">imageName</span>&gt;</span><br><br>                    <span class="hljs-comment">&lt;!-- 指定Dockerfile所在的路径 --&gt;</span><br><br>                    <span class="hljs-tag">&lt;<span class="hljs-name">dockerDirectory</span>&gt;</span>$</span><span class="hljs-template-variable">&#123;project.basedir&#125;</span><span class="xml">/src/main/docker<span class="hljs-tag">&lt;/<span class="hljs-name">dockerDirectory</span>&gt;</span><br><br>                    <span class="hljs-tag">&lt;<span class="hljs-name">resources</span>&gt;</span><br><br>                        <span class="hljs-tag">&lt;<span class="hljs-name">resource</span>&gt;</span><br><br>                            <span class="hljs-tag">&lt;<span class="hljs-name">targetPath</span>&gt;</span>/<span class="hljs-tag">&lt;/<span class="hljs-name">targetPath</span>&gt;</span><br><br>                            <span class="hljs-tag">&lt;<span class="hljs-name">directory</span>&gt;</span>$</span><span class="hljs-template-variable">&#123;project.build.directory&#125;</span><span class="xml"><span class="hljs-tag">&lt;/<span class="hljs-name">directory</span>&gt;</span><br><br>                            <span class="hljs-tag">&lt;<span class="hljs-name">include</span>&gt;</span>$</span><span class="hljs-template-variable">&#123;project.build.finalName&#125;</span><span class="xml">.jar<span class="hljs-tag">&lt;/<span class="hljs-name">include</span>&gt;</span><br><br>                        <span class="hljs-tag">&lt;/<span class="hljs-name">resource</span>&gt;</span><br><br>                    <span class="hljs-tag">&lt;/<span class="hljs-name">resources</span>&gt;</span><br><br>                    <span class="hljs-comment">&lt;!-- 以下两行是为了docker push到DockerHub使用的。 --&gt;</span><br><br>                    <span class="hljs-tag">&lt;<span class="hljs-name">serverId</span>&gt;</span>docker-hub<span class="hljs-tag">&lt;/<span class="hljs-name">serverId</span>&gt;</span><br><br>                    <span class="hljs-tag">&lt;<span class="hljs-name">registryUrl</span>&gt;</span>https://index.docker.io/v1/<span class="hljs-tag">&lt;/<span class="hljs-name">registryUrl</span>&gt;</span><br><br>                <span class="hljs-tag">&lt;/<span class="hljs-name">configuration</span>&gt;</span><br><br>            <span class="hljs-tag">&lt;/<span class="hljs-name">plugin</span>&gt;</span><br><br>        <span class="hljs-tag">&lt;/<span class="hljs-name">plugins</span>&gt;</span><br><br><span class="hljs-tag">&lt;/<span class="hljs-name">build</span>&gt;</span></span><br></code></pre></td></tr></table></figure><p>照上面修改后build之后的项目会报找不到2375端口的错误</p><p>需要我们去修改dockerhost的端口</p><figure class="highlight elixir"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><code class="hljs undefined">在控制台中输入 docker-machine env<br> <br><span class="hljs-variable">$Env</span><span class="hljs-symbol">:DOCKER_TLS_VERIFY</span> = <span class="hljs-string">"1"</span><br><br><span class="hljs-variable">$Env</span><span class="hljs-symbol">:DOCKER_HOST</span> = <span class="hljs-string">"tcp://192.168.99.100:2376"</span><br><br><span class="hljs-variable">$Env</span><span class="hljs-symbol">:DOCKER_CERT_PATH=<span class="hljs-string">"C:\Users\Administrator\.docker\machine\machines\default（每个人的路径都不一样）</span></span><br></code></pre></td></tr></table></figure><p> 再去修改pom.xml</p><figure class="highlight dust"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br></pre></td><td class="code"><pre><code class="hljs undefined"><span class="xml"><span class="hljs-tag">&lt;<span class="hljs-name">plugin</span>&gt;</span><br><br>    <span class="hljs-tag">&lt;<span class="hljs-name">groupId</span>&gt;</span>com.spotify<span class="hljs-tag">&lt;/<span class="hljs-name">groupId</span>&gt;</span><br><br>    <span class="hljs-tag">&lt;<span class="hljs-name">artifactId</span>&gt;</span>docker-maven-plugin<span class="hljs-tag">&lt;/<span class="hljs-name">artifactId</span>&gt;</span><br><br>    <span class="hljs-tag">&lt;<span class="hljs-name">version</span>&gt;</span>0.4.12<span class="hljs-tag">&lt;/<span class="hljs-name">version</span>&gt;</span><br><br>    <span class="hljs-tag">&lt;<span class="hljs-name">configuration</span>&gt;</span><br><br>        <span class="hljs-tag">&lt;<span class="hljs-name">imageName</span>&gt;</span>eacdy/test<span class="hljs-tag">&lt;/<span class="hljs-name">imageName</span>&gt;</span><br><br>        <span class="hljs-tag">&lt;<span class="hljs-name">dockerDirectory</span>&gt;</span>$</span><span class="hljs-template-variable">&#123;project.basedir&#125;</span><span class="xml">/src/main/docker<span class="hljs-tag">&lt;/<span class="hljs-name">dockerDirectory</span>&gt;</span><br><br> <br><br>        <span class="hljs-comment">&lt;!-- 解决Connect to localhost:2375的问题的其中一种方式，注意要跟docker-machine env相一致 --&gt;</span><br><br>        <span class="hljs-tag">&lt;<span class="hljs-name">dockerHost</span>&gt;</span>https://192.168.99.100:2376<span class="hljs-tag">&lt;/<span class="hljs-name">dockerHost</span>&gt;</span><br><br>        <span class="hljs-tag">&lt;<span class="hljs-name">dockerCertPath</span>&gt;</span>C:\Users\Administrator\.docker\machine\machines\default<span class="hljs-tag">&lt;/<span class="hljs-name">dockerCertPath</span>&gt;</span><br><br>        <span class="hljs-tag">&lt;<span class="hljs-name">resources</span>&gt;</span><br><br>            <span class="hljs-tag">&lt;<span class="hljs-name">resource</span>&gt;</span><br><br>                <span class="hljs-tag">&lt;<span class="hljs-name">targetPath</span>&gt;</span>/<span class="hljs-tag">&lt;/<span class="hljs-name">targetPath</span>&gt;</span><br><br>                <span class="hljs-tag">&lt;<span class="hljs-name">directory</span>&gt;</span>$</span><span class="hljs-template-variable">&#123;project.build.directory&#125;</span><span class="xml"><span class="hljs-tag">&lt;/<span class="hljs-name">directory</span>&gt;</span><br><br>                <span class="hljs-tag">&lt;<span class="hljs-name">include</span>&gt;</span>$</span><span class="hljs-template-variable">&#123;project.build.finalName&#125;</span><span class="xml">.jar<span class="hljs-tag">&lt;/<span class="hljs-name">include</span>&gt;</span><br><br>            <span class="hljs-tag">&lt;/<span class="hljs-name">resource</span>&gt;</span><br><br>        <span class="hljs-tag">&lt;/<span class="hljs-name">resources</span>&gt;</span><br><br>        <span class="hljs-comment">&lt;!-- 以下两行是为了docker push到DockerHub使用的。 --&gt;</span><br><br>        <span class="hljs-tag">&lt;<span class="hljs-name">serverId</span>&gt;</span>docker-hub<span class="hljs-tag">&lt;/<span class="hljs-name">serverId</span>&gt;</span><br><br>        <span class="hljs-tag">&lt;<span class="hljs-name">registryUrl</span>&gt;</span>https://index.docker.io/v1/<span class="hljs-tag">&lt;/<span class="hljs-name">registryUrl</span>&gt;</span><br><br>    <span class="hljs-tag">&lt;/<span class="hljs-name">configuration</span>&gt;</span><br><br><span class="hljs-tag">&lt;/<span class="hljs-name">plugin</span>&gt;</span></span><br></code></pre></td></tr></table></figure><p>这样build的项目就不会报错了</p><p> <img src="http://chuantu.biz/t6/338/1530634684x-1404817862.png" alt="image"></p><p>完美打包构建build项目。</p>]]></content>
    
    <summary type="html">
    
      &lt;p&gt;&lt;img src=&quot;http://chuantu.biz/t6/338/1530634640x-1404817868.jpg&quot; alt=&quot;image&quot;&gt;&lt;br&gt;&lt;/p&gt;
    
    </summary>
    
    
      <category term="docker" scheme="http://yoursite.com/tags/docker/"/>
    
  </entry>
  
  <entry>
    <title>五分钟搭建个人博客</title>
    <link href="http://yoursite.com/2018/07/03/FirstBlog/"/>
    <id>http://yoursite.com/2018/07/03/FirstBlog/</id>
    <published>2018-07-02T16:01:00.000Z</published>
    <updated>2018-09-12T10:42:23.845Z</updated>
    
    <content type="html"><![CDATA[<p><img src="http://wx2.sinaimg.cn/mw690/0060lm7Tly1fs3ihnzc9rj30xc0p0dlj.jpg" alt=""><br><a id="more"></a><br>三步完成个人博客搭建， 这是一篇小白也能看懂的文章，本文主要针对mac OS ，Windows 除了软件安装方式和命令有些区别（装了git bash也一样），其他基本一样。<br>你可能会经常看到类似于这样的博客：</p><hr><p><img src="https://upload-images.jianshu.io/upload_images/136678-030253f986bbeca7.png?imageMogr2/auto-orient/" alt=""><br>好了，下面开始我们的装逼之路。</p><h1 id="1-创建github域名和空间"><a href="#1-创建github域名和空间" class="headerlink" title="1.创建github域名和空间"></a>1.创建github域名和空间</h1><h2 id="1-1注册"><a href="#1-1注册" class="headerlink" title="1.1注册"></a>1.1注册</h2><p>首先你需要注册一个Github账号，已有的可以下翻去1.2 创建仓库，注意username，这会影响到你的域名，你的域名将会是 username.github.io ，所以认真的取个名字吧。</p><hr><p><img src="https://upload-images.jianshu.io/upload_images/136678-a5b815963631f1bf.png?imageMogr2/auto-orient/strip%7CimageView2/2/w/700" alt=""><br>（注册需要邮箱激活）</p><h2 id="创建仓库"><a href="#创建仓库" class="headerlink" title="创建仓库"></a>创建仓库</h2><p>然后需要创建一个仓库(repository) 来存储我们的网站，点击首页任意位置出现的 New repository按钮创建仓库, Respository name 中的username.github.io 的username 一定与前面的Owner 一致，记住你的username下面会用到。</p><hr><p><img src="https://upload-images.jianshu.io/upload_images/136678-56e4a7256ab4f141.png?imageMogr2/auto-orient/strip%7CimageView2/2/w/700" alt=""></p><h1 id="2-安装"><a href="#2-安装" class="headerlink" title="2.安装"></a>2.安装</h1><p>Hexo 可以说是目前最流行的博客框架了，基于Nodejs，更多信息可以google，下面需要安装的工具包括 Git，Nodejs，Hexo。</p><h2 id="2-1安装git"><a href="#2-1安装git" class="headerlink" title="2.1安装git"></a>2.1安装git</h2><p> <code>$ brew install git //安装git</code></p><hr><p><a href="https://sourceforge.net/projects/git-osx-installer/" target="_blank" rel="noopener">https://sourceforge.net/projects/git-osx-installer/</a>可以通过该网址进行安装</p><h2 id="2-2-安装node-js"><a href="#2-2-安装node-js" class="headerlink" title="2.2 安装node.js"></a>2.2 安装node.js</h2><p>先安装nvm，这是Nodejs版本管理器，可以轻松切换Nodejs版本。 这里有两种方式安装。如果使用curl的方式安装，安装完成之后一定要重启终端。<br>1.Homebrew 安装方式，此安装方式无需重启</p><p><code>$ brew install nvm</code></p><p><code>$ mkdir ~/.nvm</code></p><p><code>$ export NVM_DIR=~/.nvm</code></p><p><code>$ . $(brew --prefix nvm)/nvm.sh</code></p><p>安装完成后，重启终端 并执行下列命令即可安装 Node.js。</p><h2 id="2-3安装Hexo"><a href="#2-3安装Hexo" class="headerlink" title="2.3安装Hexo"></a>2.3安装Hexo</h2><p>以上所有都安装完成之后再安装Hexo<br>$ sudo npm install hexo-cli -g</p><p>工具安装完成之后，上传到Github上</p><h2 id="3-编写，发布"><a href="#3-编写，发布" class="headerlink" title="3.编写，发布"></a>3.编写，发布</h2><p>接下来我们需要用Hexo初始化一个博客，然后更改一些自定义的配置，或者加上自己喜欢的主题，写上第一篇文章，然后发布到自己的个人Github网站(username.github.io)。</p><h2 id="3-1创建博客"><a href="#3-1创建博客" class="headerlink" title="3.1创建博客"></a>3.1创建博客</h2><p>将下面的 username 替换成你自己的username，执行成功后，会创建出一个名为 username.github.io 的文件夹。<br>    <code>$ hexo init username.github.io</code></p><h2 id="3-2更改配置"><a href="#3-2更改配置" class="headerlink" title="3.2更改配置"></a>3.2更改配置</h2><p><strong>主题安装</strong></p><p>为了使博客不太难看，我们需要安装一个主题，切换至刚刚生成的Hexo 目录，安装主题</p><pre><code>`$ cd username.github.io``$ git clone https://github.com/iissnan/hexo-theme-next themes/next`</code></pre><p>这里选了一个极简的主题，也是Hexo众多主题中最受欢迎的一个。上面出现的喵神的主题 在<a href="https://github.com/monniya/hexo-theme-new-vno" target="_blank" rel="noopener">这里</a>。Hexo也有<a href="https://hexo.io/themes/" target="_blank" rel="noopener">更多主题</a>供你选择。<br>基础配置：打开文件位置username.github.io/_config.yml修改几个键值对，下面把几个必须设置的列出来按需求修改，记得保存， 还有注意配置的键值之间一定要有空格。<a href="https://hexo.io/zh-cn/docs/configuration.html" target="_blank" rel="noopener">更多设置…</a></p><p>title: dimsky 的 9 维空间 //你博客的名字</p><p>author: dimsky //你的名字</p><p>language: zh-Hans //语言 中文</p><p>theme: next //刚刚安装的主题名称</p><p>deploy:<br>type: git //使用Git 发布</p><p>repo: <a href="https://github.com/username/username.github.io.git" target="_blank" rel="noopener">https://github.com/username/username.github.io.git</a> // 刚创建的Github仓库</p><p><strong>主题配置：</strong></p><p>主题配置文件在username.github.io/themes/next/_config.yml中修改，这里略过。<a href="http://theme-next.iissnan.com/getting-started.html#theme-settings" target="_blank" rel="noopener">设置详情</a></p><h2 id="3-3写文章"><a href="#3-3写文章" class="headerlink" title="3.3写文章"></a>3.3写文章</h2><p>所有基础框架都已经创建完成，接下来可以开始写你的第一篇博客了<br>在username.github.io/source/_posts下创建你的第一个博客吧，例如，创建一个名为FirstBlog.md的文件，用Markdown大肆发挥吧，注意保存。</p><h2 id="3-4测试"><a href="#3-4测试" class="headerlink" title="3.4测试"></a>3.4测试</h2><p>$ hexo s<br>测试服务启动，你可以在浏览器中输入<a href="https://localhost:4000" target="_blank" rel="noopener">https://localhost:4000</a> 访问了。</p><h2 id="3-5-安装hexo-deployer-git自动部署发布工具"><a href="#3-5-安装hexo-deployer-git自动部署发布工具" class="headerlink" title="3.5 安装hexo-deployer-git自动部署发布工具"></a>3.5 安装hexo-deployer-git自动部署发布工具</h2><p>$ npm install hexo-deployer-git –save</p><h2 id="3-6-发布"><a href="#3-6-发布" class="headerlink" title="3.6 发布"></a>3.6 发布</h2><p>测试没问题后，我们就生成静态网页文件发布至我们的Github pages 中。<br>$ hexo clean &amp;&amp; hexo g &amp;&amp; hexo d</p><p>最后直接在浏览器里访问你的github的域名就可以你个人博客了</p>]]></content>
    
    <summary type="html">
    
      &lt;p&gt;&lt;img src=&quot;http://wx2.sinaimg.cn/mw690/0060lm7Tly1fs3ihnzc9rj30xc0p0dlj.jpg&quot; alt=&quot;&quot;&gt;&lt;br&gt;&lt;/p&gt;
    
    </summary>
    
      <category term="hexo" scheme="http://yoursite.com/categories/hexo/"/>
    
    
      <category term="技术" scheme="http://yoursite.com/tags/%E6%8A%80%E6%9C%AF/"/>
    
  </entry>
  
</feed>
